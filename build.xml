<?xml version="1.0" encoding="utf-8"?>
<!-- TODO add properties goal to update pref.properties -->
<project name="common" default="install" basedir=".">

    <property name="artifact.name" value="common"/>
    <property name="artifact.group" value="omero"/>
    <property name="artifact.version" value="3.0-TRUNK"/>
    <property name="artifact.packaging" value="jar"/><!-- Default; override in component/build.xml -->
    <property name="artifact.final.name" value="common-3.0-TRUNK.${artifact.packaging}"/>
    <property name="artifact.path" value="omero/common/3.0-TRUNK/${artifact.final.name}"/>

    <property name="import.dir" value="${basedir}/../antlib/resources"/>
    <import file="${import.dir}/global.xml"/>
    <import file="${import.dir}/dependencies.xml"/>
    <import file="${import.dir}/lifecycle.xml"/>
    <import file="${import.dir}/hibernate.xml"/>

    <!-- Class that will be called via "java -jar" on this artifact -->
    <property name="main.class" value="ome.util.tasks.Run"/>

	
	<!-- Lifecycle Overrides -->
	<target name="prepare" depends="lifecycle.prepare,load-hibernate"/>
	<target name="generate" depends="prepare,dsl,hib,lifecycle.generate" unless="generate.skip"/>
	<!-- TODO generate.skip not working -->

    <!-- = = = = = = = = = = = = = = = = =
          home grown code-gen          
         = = = = = = = = = = = = = = = = = -->
	
	<target name="dsl-init">
		<taskdef classname="ome.dsl.DSLTask" classpathref="omero.classpath" name="dsl"/>
		<is-done name="dsl" srcdir="${resrc.dir}" includes="${dsl.pat}"/>
		<!-- TODO: use dependset -->
	</target>
	
	<target name="dsl" depends="dsl-init" unless="dsl.not.required">
		<dsl destdir="${resrc.dest}/">
			<fileset dir="${resrc.dir}">
				<include name="${dsl.pat}"/>
			</fileset>
		</dsl>
		<done name="dsl"/>
	</target>

	<target name="api-init">
		<taskdef classname="ome.dsl.APITask" classpathref="omero.classpath" name="api"/>
		<is-done name="api" srcdir="${src.dir}/ome/api" includes="${api.pat}"/>
	</target>
	
	<target name="api" depends="api-init" unless="api.not.required">
		<api destdir="${resrc.dest}/">
			<fileset dir="${src.dir}/ome/api">
				<include name="${api.pat}"/>
			</fileset>
		</api>
		<done name="api"/>
	</target>
	
    <!-- = = = = = = = = = = = = = = = = =
          hibernate code-gen  
         = = = = = = = = = = = = = = = = = -->
	
	<target name="hib-init">
		<is-done name="hib" srcdir="${resrc.dest}" includes="${hbm.pat}"/>
	</target>
	
	<target name="hib" depends="dsl,hib-init" unless="hib.not.required">
		<concat destfile="${resrc.dest}/hibernate.properties" append="true">
			<filelist dir="${etc.dir}">
				<file name="hibernate.properties"/>
				<file name="local.properties"/>
			</filelist>
		</concat>

		<mkdir dir="${resrc.dest}/${omero.db.profile}"/>

		<hibernate>
			<hbm2java destdir="${src.dest}"/>
			<!-- hbm2java destdir="${dest.dir}/jdk5" generics="true" ejb3="true"/ -->
			<hbm2ddl destdir="${resrc.dest}" outputfilename="ddl.sql" drop="false" console="false" format="true" export="false" />
			<hbm2cfgXml destdir="${resrc.dest}"/>
		</hibernate>
		<done name="hib"/>
		<delete>
			<fileset dir="${src.dest}" includes="**/*.java">
				<present present="both" targetdir="${src.dir}"/>
			</fileset>
		</delete>
	</target>

	<target name="dist" depends="lifecycle.dist" description="Copies HBM files to dist">
		<copy todir="${dist.dir}/include">
			<fileset dir="${src.dest}" includes="**/*.hbm.xml"/>
			<fileset dir="${resrc.dest}" includes="**/*.hbm.xml"/>
		</copy>
	</target>

	<target name="generate-schema" depends="generate">
		<mkdir dir="${sql.dir}" />
		<copy file="${resrc.dest}/ddl.sql" tofile="${sql.dir}/${omero.dbversion}__${omero.dbpatch}__schema.sql"/>
		<copy file="${resrc.dest}/data.sql" tofile="${sql.dir}/${omero.dbversion}__${omero.dbpatch}__data.sql"/>
	</target>

    <!-- = = = = = = = = = = = = = = = = =
          misc          
         = = = = = = = = = = = = = = = = = -->

    <target name="schemaupdate" depends="prepare,load-hibernate">
        <taskdef name="schemaupdate"
            classname="org.hibernate.tool.hbm2ddl.SchemaUpdateTask"
            classpathref="omero.classpath"/>

        <schemaupdate
            properties="${resrc.dest}/local.properties" text="true" quiet="no">
            <fileset dir="${classes.dir}">
                <include name="**/*.hbm.xml"/>
            </fileset>
        </schemaupdate>
    </target>

    <target name="schemavalidate" depends="prepare,load-hibernate">
        <taskdef name="schemavalidator"
            classname="org.hibernate.tool.hbm2ddl.SchemaValidatorTask"
            classpathref="omero.classpath"/>

        <schemavalidator
            properties="${resrc.dest}/local.properties">
            <fileset dir="${classes.dir}">
                <include name="**/*.hbm.xml"/>
            </fileset>
        </schemavalidator>
    </target>

</project>
