<?xml version="1.0" encoding="utf-8"?>
<project name="model" default="install" basedir=".">

    <property name="import.dir" value="${basedir}/../antlib/resources"/>
    <import file="${import.dir}/global.xml"/>
    <import file="${import.dir}/dependencies.xml"/>
    <import file="${import.dir}/lifecycle.xml"/>
    <import file="${import.dir}/hibernate.xml"/>

<target name="tmphib" depends="prepare">
  <taskdef name="hibernatetool" classname="org.hibernate.tool.ant.HibernateToolTask" classpathref="omero.classpath" />
  <hibernatetool destdir="${target.dir}/generated/ant">
    <annotationconfiguration configurationfile="${resrc.dest}/hibernate.cfg.xml" propertyfile="${resrc.dest}/local.properties">
      <fileset dir="${resrc.dir}" includes="*.hbm.xml"/>
    </annotationconfiguration>
    <hbm2ddl destdir="${resrc.dest}" outputfilename="ddl.sql" drop="false" console="false" format="true" export="false" />
  </hibernatetool>
  <taskdef name="schemavalidator" classname="org.hibernate.tool.hbm2ddl.SchemaValidatorTask" classpathref="omero.classpath"/>
  <!--schemavalidator properties="${resrc.dest}/local.properties" config="${basedir}/test/test.cfg.xml"/-->
</target>

    <!-- Class that will be called via "java -jar" on this artifact -->
    <property name="main.class" value="ome.util.tasks.Run"/>

	<target name="prepare" depends="lifecycle.prepare">
		<copy todir="${classes.dir}">
			<fileset dir="${resrc.dir}" includes="ome/extra/**"/>
		</copy>
	</target>

	<!-- Lifecycle Overrides -->
	<target name="generate" depends="prepare,dsl,lifecycle.generate" unless="generate.skip">
	</target>

	<!-- TODO generate.skip not working -->

    <!-- = = = = = = = = = = = = = = = = =
          home grown code-gen
         = = = = = = = = = = = = = = = = = -->

	<target name="dsl-init">
		<taskdef classname="ome.dsl.DSLTask" classpathref="omero.classpath" name="dsl"/>
		<is-done name="dsl" srcdir="${resrc.dir}" includes="${dsl.pat}"/>
		<!-- TODO: use dependset -->
	</target>

	<target name="dsl" depends="dsl-init" unless="dsl.not.required">
		<dsl destdir="${target.dir}/generated/">
			<fileset dir="${resrc.dir}">
				<include name="${dsl.pat}"/>
			</fileset>
		</dsl>
		<done name="dsl"/>
		<delete>
			<fileset dir="${src.dest}" includes="**/*.java">
				<present present="both" targetdir="${src.dir}"/>
			</fileset>
		</delete>
	</target>

	<target name="dist" depends="lifecycle.dist" description="Copies HBM files to dist">
		<copy todir="${dist.dir}/include">
			<fileset dir="${src.dest}" includes="**/*.hbm.xml"/>
			<fileset dir="${resrc.dest}" includes="**/*.hbm.xml"/>
		</copy>
	</target>

	<target name="generate-schema" depends="generate" description="Generates SQL based on Hibernate mappings">
		<mkdir dir="${sql.dir}"/>
		<copy file="${resrc.dest}/ddl.sql" tofile="${sql.dir}/schema.sql"/>
		<copy file="${resrc.dest}/data.sql" tofile="${sql.dir}/data.sql"/>
		<replace file="${sql.dir}/data.sql" token="@DBPATCH@" value="${omero.dbpatch}"/>
		<replace file="${sql.dir}/data.sql" token="@DBVERSION@" value="${omero.dbversion}"/>
	</target>

    <!-- = = = = = = = = = = = = = = = = =
          misc          
         = = = = = = = = = = = = = = = = = -->

    <target name="schemaupdate" depends="prepare,load-hibernate">
        <taskdef name="schemaupdate"
            classname="org.hibernate.tool.hbm2ddl.SchemaUpdateTask"
            classpathref="omero.classpath"/>

        <schemaupdate
            properties="${resrc.dest}/local.properties" text="true" quiet="no">
            <fileset dir="${classes.dir}">
                <include name="**/*.hbm.xml"/>
            </fileset>
        </schemaupdate>
    </target>

    <target name="schemavalidate" depends="prepare,load-hibernate">
        <taskdef name="schemavalidator"
            classname="org.hibernate.tool.hbm2ddl.SchemaValidatorTask"
            classpathref="omero.classpath"/>

        <schemavalidator
            properties="${resrc.dest}/local.properties">
            <fileset dir="${classes.dir}">
                <include name="**/*.hbm.xml"/>
            </fileset>
        </schemavalidator>
    </target>

</project>
