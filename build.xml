<?xml version="1.0" encoding="utf-8"?>
<project name="model" default="install" basedir=".">

    <property name="import.dir" value="${basedir}/../antlib/resources"/>
    <import file="${import.dir}/global.xml"/>
    <import file="${import.dir}/lifecycle.xml"/>
    <import file="${import.dir}/hibernate.xml"/>

    <!-- Class that will be called via "java -jar" on this artifact -->
    <property name="main.class" value="ome.util.tasks.Run"/>

	<target name="prepare" depends="lifecycle.prepare">
		<copy todir="${classes.dir}">
			<fileset dir="${resrc.dir}" includes="ome/extra/**"/>
		</copy>
	</target>

	<!-- Lifecycle Overrides -->
	<target name="generate" depends="prepare,dsl,lifecycle.generate" unless="generate.skip">
	</target>

	<macrodef name="dsl-with-filter">
		<attribute name="template"/>
		<attribute name="filepattern"/>
		<attribute name="dependdir"/>
		<attribute name="dependpat"/>
		<sequential>
		<dsl template="@{template}" filepattern="@{filepattern}">
			<fileset dir="${resrc.dir}" includes="${dsl.pat}">
				<depend targetdir="@{dependdir}">
					<mapper type="merge" to="@{dependpat}"/>
				</depend>
			</fileset>
		</dsl>
		</sequential>
	</macrodef>

	<target name="dsl">
		<taskdef classname="ome.dsl.DSLTask" classpathref="omero.classpath" name="dsl"/>
		<dsl-with-filter template="ome/dsl/object.vm" filepattern="${src.dest}/{package-dir}/{class-name}.java"
			dependdir="${src.dest}/ome/model/core/" dependpat="Image.java"/>
		<dsl-with-filter template="ome/dsl/cfg.vm" filepattern="${resrc.dest}/hibernate.cfg.xml"
			dependdir="${resrc.dest}" dependpat="hibernate.cfg.xml"/>
		<dsl-with-filter template="ome/dsl/data.vm" filepattern="${resrc.dest}/data.sql"
			dependdir="${resrc.dest}" dependpat="data.sql"/>
		<dsl-with-filter template="ome/dsl/views.vm" filepattern="${resrc.dest}/views.sql"
			dependdir="${resrc.dest}" dependpat="views.sql"/>
		<dsl-with-filter template="ome/dsl/enums.vm" filepattern="${blitz.comp}/target/generated/resources/enums.properties"
			dependdir="${blitz.comp}/target/generated/resources" dependpat="enums.properties"/>
		<delete>
			<fileset dir="${src.dest}" includes="**/*.java">
				<present present="both" targetdir="${src.dir}"/>
			</fileset>
		</delete>
	</target>

	<target name="dist" depends="lifecycle.dist" description="Copies HBM files to dist">
		<copy todir="${dist.dir}/include">
			<fileset dir="${src.dest}" includes="**/*.hbm.xml"/>
			<fileset dir="${resrc.dest}" includes="**/*.hbm.xml"/>
		</copy>
	</target>

	<target name="generate-schema" depends="generate" description="Generates SQL based on Hibernate mappings">

		<taskdef name="hibernatetool" classname="org.hibernate.tool.ant.HibernateToolTask" classpathref="omero.classpath" />
		<hibernatetool destdir="${target.dir}/generated/ant">
			<annotationconfiguration configurationfile="${resrc.dest}/hibernate.cfg.xml" propertyfile="${resrc.dest}/local.properties">
				<fileset dir="${resrc.dir}" includes="*.hbm.xml"/>
			</annotationconfiguration>
			<hbm2ddl destdir="${resrc.dest}" outputfilename="ddl.sql" drop="false" console="false" format="true" export="false" delimiter=";;"/>
		</hibernatetool>
		<taskdef name="schemavalidator" classname="org.hibernate.tool.hbm2ddl.SchemaValidatorTask" classpathref="omero.classpath"/>
		<!-- Disabled -->
		<!--schemavalidator properties="${resrc.dest}/local.properties" config="${basedir}/test/test.cfg.xml"/-->
        </target>

        <target name="publish-schema" depends="generate-schema" description="Copies SQL from generate-schema to main sql/ directory">
		<mkdir dir="${sql.dir}"/>
		<copy file="${resrc.dest}/ddl.sql" tofile="${sql.dir}/schema.sql"/>
		<copy file="${resrc.dest}/data.sql" tofile="${sql.dir}/data.sql"/>
		<copy file="${resrc.dest}/views.sql" tofile="${sql.dir}/views.sql"/>
		<replace file="${sql.dir}/data.sql" token="@DBPATCH@" value="${omero.db.patch}"/>
		<replace file="${sql.dir}/data.sql" token="@DBVERSION@" value="${omero.db.version}"/>
	</target>

    <!-- = = = = = = = = = = = = = = = = =
          misc
         = = = = = = = = = = = = = = = = = -->

    <target name="schemaupdate" depends="prepare,load-hibernate">
        <taskdef name="schemaupdate"
            classname="org.hibernate.tool.hbm2ddl.SchemaUpdateTask"
            classpathref="omero.classpath"/>

        <schemaupdate
            properties="${resrc.dest}/local.properties" text="true" quiet="no">
            <fileset dir="${classes.dir}">
                <include name="**/*.hbm.xml"/>
            </fileset>
        </schemaupdate>
    </target>

    <target name="schemavalidate" depends="prepare,load-hibernate">
        <taskdef name="schemavalidator"
            classname="org.hibernate.tool.hbm2ddl.SchemaValidatorTask"
            classpathref="omero.classpath"/>

        <schemavalidator
            properties="${resrc.dest}/local.properties">
            <fileset dir="${classes.dir}">
                <include name="**/*.hbm.xml"/>
            </fileset>
        </schemavalidator>
    </target>

</project>
