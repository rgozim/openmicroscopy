<?xml version="1.0" encoding="UTF-8"?>
<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# Copyright (C) 2005 Open Microscopy Environment
#       Massachusetts Institue of Technology,
#       National Institutes of Health,
#       University of Dundee
#
#
#
#    This library is free software; you can redistribute it and/or
#    modify it under the terms of the GNU Lesser General Public
#    License as published by the Free Software Foundation; either
#    version 2.1 of the License, or (at your option) any later version.
#
#    This library is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#    Lesser General Public License for more details.
#
#    You should have received a copy of the GNU Lesser General Public
#    License along with this library; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->

<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Written by:  Josh Moore <josh.moore@gmx.de>
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->

<!--

	Configuration of all things dao. It should be possible to drop in
	a new dao.xml for JDOs or whatever, and have things work seamlessly.
 
-->

<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>	

        <!-- Aspects/Interceptors which catch ALL calls to our dao methods
                 =================================================================
                 Possibilities are: tracing, logging, security, transactions, etc.
         -->
        <bean id="daoBeanNameProxyCreator"
                class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
                <property name="beanNames"><value>*Dao</value></property> 
                <property name="interceptorNames">
                <list>
					<value>daoFilter</value>					
					<!--                    
                    <value>exceptionHandling</value>
                    <value>logging</value>
					<value>serviceTracing</value> TODO: tracing for all?
					-->
                </list>
                </property>
        </bean>

	<!-- TODO: possibly switch to proxyFactoryBean for increased functionality
		<bean id="daoProxy" abstract="true" class="org.springframework.aop.framework.ProxyFactoryBean">
			<property name="interceptorNames">
    	  		<list>
      	    		<value>daoCleanUp</value>
	-->

        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

        <!-- dao parent bean must be defined in a specific technology
	     package hibernate.xml jdo.xml etc. -->

	<!-- hibernate classes mentioned TODO move to dao.hibernate -->
	<bean id="analysisDao"   class="ome.dao.hibernate.AnalysisDaoHibernate"  parent="dao"/>	
	<bean id="annotationDao" class="ome.dao.hibernate.AnnotationDaoHibernate"  parent="dao"/>
	<bean id="containerDao"  class="ome.dao.hibernate.ContainerDaoHibernate"  parent="dao"/>
	<bean id="genericDao"    class="ome.dao.hibernate.GenericDaoHibernate"  parent="dao"/>
	<bean id="pixelsDao"     class="ome.dao.hibernate.PixelsDaoHibernate"  parent="dao"/>
	
	<bean id="daoFactory"	 class="ome.dao.DaoFactory">
		<constructor-arg index="0" ref="analysisDao"/>
		<constructor-arg index="1" ref="annotationDao"/>
		<constructor-arg index="2" ref="containerDao"/>
		<constructor-arg index="3" ref="genericDao"/>						
		<constructor-arg index="4" ref="pixelsDao"/>			
	</bean>	
	
</beans>
