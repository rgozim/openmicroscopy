$pojo.getPackageDeclaration()

$secondpassclassimports
###########################################################
## <CustomCode>
###########################################################
import java.util.*;
###########################################################
## </CustomCode>
###########################################################

$templates.PojoTypeDeclaration 
{

#if(!$pojo.isInterface())

$templates.PojoFields

$templates.PojoConstructors
   
$templates.PojoPropertyAccessors   

$templates.PojoToString

$templates.PojoEqualsHashcode

#else 

$templates.PojoInterfacePropertyAccessors

#end

$templates.PojoExtraClassCode

###########################################################
## <CustomCode>
###########################################################
  public boolean isValid() 
  {
      return ome.util.Validator.validate(this).isValid();
  }
  
  public ome.util.Validation validate()
  {
      return ome.util.Validator.validate(this);
  }
  
  public boolean acceptFilter(ome.util.Filter filter){

#foreach($property in $pojo.allPropertiesIterator)
#set( $fulltype = $c2j.getJavaTypeName($property) ) ## , $generics)
#set( $type = $c2j.unqualify($fulltype) )
#set( $get = "$pojo.getGetterSignature($property)()" )
#set( $set = "set$pojo.getPropertyName($property)" )
#set( $field = $property.name )

	  // Visiting: $field ------------------------------------------
	  $type _$field = null;
	  try {
	     _$field = $get;
	  } catch (Exception e) {
		 $set(null);
	  }
## TODO catch class cast?
	  $set(($type) filter.filter(${field.toUpperCase()},_$field)); 
##if( $pkg.startsWith("ome."))
##elseif($type.equals("Set"))
##	  $set(($type) filter.filter((Collection)_$field)); 
##else
##	  $set(($type) filter.filter((Object) _$field));
##end ## if 
#end ## foreach
  	 return true;
  }

#if($clazz.identifierProperty)
  public String toString(){
#set($idGetter = "${pojo.getGetterSignature($clazz.identifierProperty)}()")
	return "$pojo.declarationName"+($idGetter==null ? ":Hash_"+this.hashCode() : ":Id_"+$idGetter);
  }
#end
  
  // FIELD-FIELDS
  
  	public Set fields()
    {
	    return new HashSet(${pojo.getDeclarationName()}.FIELDS);
    }
  
#foreach($property in $pojo.allPropertiesIterator)
#set( $field = $property.name )
	public final static String ${field.toUpperCase()} = "${pojo.declarationName}_${field}";
#end ## foreach
	public final static Set FIELDS = new HashSet();
	static {
#foreach($property in $pojo.allPropertiesIterator)
#set( $field = $property.name )
	   FIELDS.add(${field.toUpperCase()});
#end ## foreach
	}
	
	
	// Dynamic Getter/Setter
	protected Map _dynamicFields;
	public Object retrieve(String field)
	{
		if (field == null)
		{
			return null;
#foreach($property in $pojo.allPropertiesIterator)
#set( $field = $property.name )
#set( $get = "$pojo.getGetterSignature($property)()" )
		}
		else if (field.equals(${field.toUpperCase()})) ## use == here first??
		{
			return $get;
#end ## forech
		} else {
			if (_dynamicFields != null)
			{
				return _dynamicFields.get(field);
			}
			return null;
		}
	}
	
	public void putAt(String field, Object value)
	{
		if (field == null)
		{
			return;
#foreach($property in $pojo.allPropertiesIterator)
#set( $field = $property.name )
#set( $set = "set$pojo.getPropertyName($property)" )
#set( $fulltype = $c2j.getJavaTypeName($property) ) ## , $generics)
#set( $type = $c2j.unqualify($fulltype) )
		}
		else if (field.equals(${field.toUpperCase()}))
		{
			${set}(($type)value);
#end ## foreach			
		} else {
			if (_dynamicFields == null)
				_dynamicFields = new HashMap();
			
			_dynamicFields.put(field,value);
		}
	}

##parse( "$clazz.vm" ) TODO
##parse( "pojo/test.vm" )
##$templates.get("pojo/test.vm")
#set($t = "pojo/${pojo.declarationName}.vm")
##if($th.templateExists($t))$templates.get($t)#end TODO
###########################################################
## </CustomCode>
###########################################################

}
