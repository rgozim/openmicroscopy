<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd" >

<hibernate-mapping>
  <!-- load*Hierarchy 
	TODO if all ids where called *.getId() then we could merge these 
	-->
<!--TODO  need to add default_pixel once FK from Ilya -->
<!--TODO some way to DRY here would be great -->
  <query name="loadHierarchy_by_Project"><![CDATA[
    from Project as p
	  left outer join fetch p.experimenter as p_e
	  left outer join fetch p.group as p_g
	  left outer join fetch p.datasets as d
	  left outer join fetch d.experimenter as d_e
	  left outer join fetch d.group as d_g
	  left outer join fetch d.images as i
	  left outer join fetch i.group as i_g
	  left outer join fetch i.experimenter as i_e
	    where p.projectId = :id
  ]]></query>

  <query name="loadHierarchy_by_Dataset"><![CDATA[
	from Dataset as d 
	  left outer join fetch d.experimenter as d_e
	  left outer join fetch d.group as d_g
	  left outer join fetch d.images as i
	  left outer join fetch i.group as i_g
	  left outer join fetch i.experimenter as i_e
	    where d.datasetId = :id 
  ]]></query>

  <query name="loadHierarchy_by_CategoryGroup"><![CDATA[
	from CategoryGroup cg 
	  left outer join fetch cg.moduleExecution as cg_mex 
	  left outer join fetch cg_mex.experimenter as cg_exp
	  left outer join fetch cg_mex.categories as c
	  left outer join fetch c.moduleExecution as c_mex
	  left outer join fetch c_mex.experimenter as c_exp
	  left outer join fetch c_mex.classifications as cla
	  left outer join fetch cla.moduleExecution as cla_mex
	  left outer join fetch cla_mex.experimenter as cla_exp
	  left outer join fetch cla.image as i
        where cg.attributeId = :id 
  ]]></query>

  <query name="loadHierarchy_by_Category"><![CDATA[
	from Category c 
  	  left outer join fetch c.moduleExecution as c_mex
	  left outer join fetch c_mex.experimenter as c_exp
	  left outer join fetch c_mex.classifications as cla
	  left outer join fetch cla.moduleExecution as cla_mex
	  left outer join fetch cla_mex.experimenter as cla_exp
	  left outer join fetch cla.image as i
	    where c.attributeId = :id 
  ]]></query>
    
  <!-- find*Hierarchies -->
  <query name="findPDI"><![CDATA[
	from Image as i 
	  left outer join fetch i.datasets as d
	  left outer join fetch d.experimenter as d_exp
	  left outer join fetch d.group as d_g	  
	  left outer join fetch d.projects as p
	  left outer join fetch p.experimenter as p_exp
	  left outer join fetch p.group as p_g 
	    where i in (:img_list)
  ]]></query>	

<!-- this is standard style temporarily using theta style 
  <query name="findCGCI"><![CDATA[
	from Image as i 
	  left outer join fetch i.classifications as cla 
	  left outer join fetch cla.category as c
	  left outer join fetch c.moduleExecution as c_mex
	  left outer join fetch c_mex.experimenter as c_exp
	  left outer join fetch c.categoryGroup as cg
	  left outer join fetch cg.moduleExecution as cg_mex
	  left outer join fetch cg_mex.experimenter as cg_exp
  	    where i in (:img_list)
  	      and ( cla.valid = true or cla.valid is null)
		  ALSO NEED VALID STATEMENTS ON OTHER CLA QUERIES ABOVE!!!
  ]]></query>	
  -->
  <query name="findCGCI"><![CDATA[
	from Image as i 
	  left outer join fetch i.classifications as cla 
  	    where i in (:img_list)
  	      and ( cla.valid = true or cla.valid is null)
  ]]></query>			  
		  
  <!-- findAnnotations -->
  <query name="findImageAnn"><![CDATA[
	from ImageAnnotation as ann 
	  left outer join fetch ann.image as i 
	  left outer join fetch ann.moduleExecution as ann_mex
	  left outer join fetch ann_mex.experimenter as ann_exp
  	  where ann.image in (:img_list) 
	    and ( ann.valid = true or ann.valid is null)
  ]]></query>

  <query name="findImageAnnWithID"><![CDATA[
	from ImageAnnotation as ann 
	  left outer join fetch ann.image as i 
	  left outer join fetch ann.moduleExecution as ann_mex
	  left outer join fetch ann_mex.experimenter as ann_exp
  	  where ann.image in (:img_list) 
	    and ( ann.valid = true or ann.valid is null)
  	    and ann_exp = :expId
  ]]></query>

  <query name="findDatasetAnn"><![CDATA[
	from DatasetAnnotation as ann 
	  left outer join fetch ann.dataset as d 
	  left outer join fetch ann.moduleExecution as ann_mex
	  left outer join fetch ann_mex.experimenter as ann_exp
      where ann.dataset in (:ds_list)
	    and ( ann.valid = true or ann.valid is null)
  ]]></query>
  
  <query name="findDatasetAnnWithID"><![CDATA[
	from DatasetAnnotation as ann 
	  left outer join fetch ann.dataset as d 
	  left outer join fetch ann.moduleExecution as ann_mex
	  left outer join fetch ann_mex.experimenter as ann_exp
      where d in (:ds_list) 
	    and ( ann.valid = true or ann.valid is null)
	    and ann_exp = :expId
  ]]></query>
  
</hibernate-mapping>
