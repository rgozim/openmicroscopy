package org.openmicroscopy.omero.model;

import org.openmicroscopy.omero.BaseModelUtils;
import ome.util.Filterable;
import ome.util.Filter;


import java.util.*;




/**
 * RenderingSetting generated by hbm2java
 */
public class
RenderingSetting 
implements java.io.Serializable ,
org.openmicroscopy.omero.OMEModel,
ome.util.Filterable {

    // Fields    

     private Integer attributeId;
     private Integer theT;
     private Integer cdEnd;
     private Double inputEnd;
     private Integer model;
     private Integer cdStart;
     private Integer green;
     private Integer alpha;
     private Integer blue;
     private Integer red;
     private Integer bitResolution;
     private Boolean active;
     private Double inputStart;
     private Integer theC;
     private Double coefficient;
     private Integer theZ;
     private Integer family;
     private Experimenter experimenter;
     private Image image;
     private ModuleExecution moduleExecution;


    // Constructors

    /** default constructor */
    public RenderingSetting() {
    }
    
    /** constructor with id */
    public RenderingSetting(Integer attributeId) {
        this.attributeId = attributeId;
    }
   
    
    

    // Property accessors

    /**
     * 
     */
    public Integer getAttributeId() {
        return this.attributeId;
    }
    
    public void setAttributeId(Integer attributeId) {
        this.attributeId = attributeId;
    }

    /**
     * 
     */
    public Integer getTheT() {
        return this.theT;
    }
    
    public void setTheT(Integer theT) {
        this.theT = theT;
    }

    /**
     * 
     */
    public Integer getCdEnd() {
        return this.cdEnd;
    }
    
    public void setCdEnd(Integer cdEnd) {
        this.cdEnd = cdEnd;
    }

    /**
     * 
     */
    public Double getInputEnd() {
        return this.inputEnd;
    }
    
    public void setInputEnd(Double inputEnd) {
        this.inputEnd = inputEnd;
    }

    /**
     * 
     */
    public Integer getModel() {
        return this.model;
    }
    
    public void setModel(Integer model) {
        this.model = model;
    }

    /**
     * 
     */
    public Integer getCdStart() {
        return this.cdStart;
    }
    
    public void setCdStart(Integer cdStart) {
        this.cdStart = cdStart;
    }

    /**
     * 
     */
    public Integer getGreen() {
        return this.green;
    }
    
    public void setGreen(Integer green) {
        this.green = green;
    }

    /**
     * 
     */
    public Integer getAlpha() {
        return this.alpha;
    }
    
    public void setAlpha(Integer alpha) {
        this.alpha = alpha;
    }

    /**
     * 
     */
    public Integer getBlue() {
        return this.blue;
    }
    
    public void setBlue(Integer blue) {
        this.blue = blue;
    }

    /**
     * 
     */
    public Integer getRed() {
        return this.red;
    }
    
    public void setRed(Integer red) {
        this.red = red;
    }

    /**
     * 
     */
    public Integer getBitResolution() {
        return this.bitResolution;
    }
    
    public void setBitResolution(Integer bitResolution) {
        this.bitResolution = bitResolution;
    }

    /**
     * 
     */
    public Boolean getActive() {
        return this.active;
    }
    
    public void setActive(Boolean active) {
        this.active = active;
    }

    /**
     * 
     */
    public Double getInputStart() {
        return this.inputStart;
    }
    
    public void setInputStart(Double inputStart) {
        this.inputStart = inputStart;
    }

    /**
     * 
     */
    public Integer getTheC() {
        return this.theC;
    }
    
    public void setTheC(Integer theC) {
        this.theC = theC;
    }

    /**
     * 
     */
    public Double getCoefficient() {
        return this.coefficient;
    }
    
    public void setCoefficient(Double coefficient) {
        this.coefficient = coefficient;
    }

    /**
     * 
     */
    public Integer getTheZ() {
        return this.theZ;
    }
    
    public void setTheZ(Integer theZ) {
        this.theZ = theZ;
    }

    /**
     * 
     */
    public Integer getFamily() {
        return this.family;
    }
    
    public void setFamily(Integer family) {
        this.family = family;
    }

    /**
     * 
     */
    public Experimenter getExperimenter() {
        return this.experimenter;
    }
    
    public void setExperimenter(Experimenter experimenter) {
        this.experimenter = experimenter;
    }

    /**
     * 
     */
    public Image getImage() {
        return this.image;
    }
    
    public void setImage(Image image) {
        this.image = image;
    }

    /**
     * 
     */
    public ModuleExecution getModuleExecution() {
        return this.moduleExecution;
    }
    
    public void setModuleExecution(ModuleExecution moduleExecution) {
        this.moduleExecution = moduleExecution;
    }





	/** utility methods. Container may re-assign this. */	
	protected static org.openmicroscopy.omero.BaseModelUtils _utils = 
		new org.openmicroscopy.omero.BaseModelUtils();
	public BaseModelUtils getUtils(){
		return _utils;
	}
	public void setUtils(BaseModelUtils utils){
		_utils = utils;
	}

  public boolean acceptFilter(Filter filter){


	  // Visiting: AttributeId ------------------------------------------
	  Integer _AttributeId = null;
	  try {
	     _AttributeId = getAttributeId();
	  } catch (Exception e) {
		 setAttributeId(null);
	  }
// TODO catch class cast?
	  setAttributeId((Integer) filter.filter("org.hibernate.mapping.RootClass(org.openmicroscopy.omero.model.RenderingSetting):AttributeId",_AttributeId)); 

	  // Visiting: TheT ------------------------------------------
	  Integer _TheT = null;
	  try {
	     _TheT = getTheT();
	  } catch (Exception e) {
		 setTheT(null);
	  }
// TODO catch class cast?
	  setTheT((Integer) filter.filter("org.hibernate.mapping.RootClass(org.openmicroscopy.omero.model.RenderingSetting):TheT",_TheT)); 

	  // Visiting: CdEnd ------------------------------------------
	  Integer _CdEnd = null;
	  try {
	     _CdEnd = getCdEnd();
	  } catch (Exception e) {
		 setCdEnd(null);
	  }
// TODO catch class cast?
	  setCdEnd((Integer) filter.filter("org.hibernate.mapping.RootClass(org.openmicroscopy.omero.model.RenderingSetting):CdEnd",_CdEnd)); 

	  // Visiting: InputEnd ------------------------------------------
	  Double _InputEnd = null;
	  try {
	     _InputEnd = getInputEnd();
	  } catch (Exception e) {
		 setInputEnd(null);
	  }
// TODO catch class cast?
	  setInputEnd((Double) filter.filter("org.hibernate.mapping.RootClass(org.openmicroscopy.omero.model.RenderingSetting):InputEnd",_InputEnd)); 

	  // Visiting: Model ------------------------------------------
	  Integer _Model = null;
	  try {
	     _Model = getModel();
	  } catch (Exception e) {
		 setModel(null);
	  }
// TODO catch class cast?
	  setModel((Integer) filter.filter("org.hibernate.mapping.RootClass(org.openmicroscopy.omero.model.RenderingSetting):Model",_Model)); 

	  // Visiting: CdStart ------------------------------------------
	  Integer _CdStart = null;
	  try {
	     _CdStart = getCdStart();
	  } catch (Exception e) {
		 setCdStart(null);
	  }
// TODO catch class cast?
	  setCdStart((Integer) filter.filter("org.hibernate.mapping.RootClass(org.openmicroscopy.omero.model.RenderingSetting):CdStart",_CdStart)); 

	  // Visiting: Green ------------------------------------------
	  Integer _Green = null;
	  try {
	     _Green = getGreen();
	  } catch (Exception e) {
		 setGreen(null);
	  }
// TODO catch class cast?
	  setGreen((Integer) filter.filter("org.hibernate.mapping.RootClass(org.openmicroscopy.omero.model.RenderingSetting):Green",_Green)); 

	  // Visiting: Alpha ------------------------------------------
	  Integer _Alpha = null;
	  try {
	     _Alpha = getAlpha();
	  } catch (Exception e) {
		 setAlpha(null);
	  }
// TODO catch class cast?
	  setAlpha((Integer) filter.filter("org.hibernate.mapping.RootClass(org.openmicroscopy.omero.model.RenderingSetting):Alpha",_Alpha)); 

	  // Visiting: Blue ------------------------------------------
	  Integer _Blue = null;
	  try {
	     _Blue = getBlue();
	  } catch (Exception e) {
		 setBlue(null);
	  }
// TODO catch class cast?
	  setBlue((Integer) filter.filter("org.hibernate.mapping.RootClass(org.openmicroscopy.omero.model.RenderingSetting):Blue",_Blue)); 

	  // Visiting: Red ------------------------------------------
	  Integer _Red = null;
	  try {
	     _Red = getRed();
	  } catch (Exception e) {
		 setRed(null);
	  }
// TODO catch class cast?
	  setRed((Integer) filter.filter("org.hibernate.mapping.RootClass(org.openmicroscopy.omero.model.RenderingSetting):Red",_Red)); 

	  // Visiting: BitResolution ------------------------------------------
	  Integer _BitResolution = null;
	  try {
	     _BitResolution = getBitResolution();
	  } catch (Exception e) {
		 setBitResolution(null);
	  }
// TODO catch class cast?
	  setBitResolution((Integer) filter.filter("org.hibernate.mapping.RootClass(org.openmicroscopy.omero.model.RenderingSetting):BitResolution",_BitResolution)); 

	  // Visiting: Active ------------------------------------------
	  Boolean _Active = null;
	  try {
	     _Active = getActive();
	  } catch (Exception e) {
		 setActive(null);
	  }
// TODO catch class cast?
	  setActive((Boolean) filter.filter("org.hibernate.mapping.RootClass(org.openmicroscopy.omero.model.RenderingSetting):Active",_Active)); 

	  // Visiting: InputStart ------------------------------------------
	  Double _InputStart = null;
	  try {
	     _InputStart = getInputStart();
	  } catch (Exception e) {
		 setInputStart(null);
	  }
// TODO catch class cast?
	  setInputStart((Double) filter.filter("org.hibernate.mapping.RootClass(org.openmicroscopy.omero.model.RenderingSetting):InputStart",_InputStart)); 

	  // Visiting: TheC ------------------------------------------
	  Integer _TheC = null;
	  try {
	     _TheC = getTheC();
	  } catch (Exception e) {
		 setTheC(null);
	  }
// TODO catch class cast?
	  setTheC((Integer) filter.filter("org.hibernate.mapping.RootClass(org.openmicroscopy.omero.model.RenderingSetting):TheC",_TheC)); 

	  // Visiting: Coefficient ------------------------------------------
	  Double _Coefficient = null;
	  try {
	     _Coefficient = getCoefficient();
	  } catch (Exception e) {
		 setCoefficient(null);
	  }
// TODO catch class cast?
	  setCoefficient((Double) filter.filter("org.hibernate.mapping.RootClass(org.openmicroscopy.omero.model.RenderingSetting):Coefficient",_Coefficient)); 

	  // Visiting: TheZ ------------------------------------------
	  Integer _TheZ = null;
	  try {
	     _TheZ = getTheZ();
	  } catch (Exception e) {
		 setTheZ(null);
	  }
// TODO catch class cast?
	  setTheZ((Integer) filter.filter("org.hibernate.mapping.RootClass(org.openmicroscopy.omero.model.RenderingSetting):TheZ",_TheZ)); 

	  // Visiting: Family ------------------------------------------
	  Integer _Family = null;
	  try {
	     _Family = getFamily();
	  } catch (Exception e) {
		 setFamily(null);
	  }
// TODO catch class cast?
	  setFamily((Integer) filter.filter("org.hibernate.mapping.RootClass(org.openmicroscopy.omero.model.RenderingSetting):Family",_Family)); 

	  // Visiting: Experimenter ------------------------------------------
	  Experimenter _Experimenter = null;
	  try {
	     _Experimenter = getExperimenter();
	  } catch (Exception e) {
		 setExperimenter(null);
	  }
// TODO catch class cast?
	  setExperimenter((Experimenter) filter.filter("org.hibernate.mapping.RootClass(org.openmicroscopy.omero.model.RenderingSetting):Experimenter",_Experimenter)); 

	  // Visiting: Image ------------------------------------------
	  Image _Image = null;
	  try {
	     _Image = getImage();
	  } catch (Exception e) {
		 setImage(null);
	  }
// TODO catch class cast?
	  setImage((Image) filter.filter("org.hibernate.mapping.RootClass(org.openmicroscopy.omero.model.RenderingSetting):Image",_Image)); 

	  // Visiting: ModuleExecution ------------------------------------------
	  ModuleExecution _ModuleExecution = null;
	  try {
	     _ModuleExecution = getModuleExecution();
	  } catch (Exception e) {
		 setModuleExecution(null);
	  }
// TODO catch class cast?
	  setModuleExecution((ModuleExecution) filter.filter("org.hibernate.mapping.RootClass(org.openmicroscopy.omero.model.RenderingSetting):ModuleExecution",_ModuleExecution)); 
   	 return true;
  }
  
  public String toString(){
	return "RenderingSetting"+(attributeId==null ? ":Hash"+this.hashCode() : ":"+attributeId);
  }
  


}
