package org.openmicroscopy.omero.model;

import org.openmicroscopy.omero.BaseModelUtils;


import java.util.*;




/**
 * AnalysisChainLink generated by hbm2java
 */
public class
AnalysisChainLink 
implements java.io.Serializable ,
org.openmicroscopy.omero.OMEModel {

    // Fields    

     private Integer analysisChainLinkId;
     private AnalysisChain analysisChain;
     private AnalysisChainNode analysisChainNodeByToNode;
     private AnalysisChainNode analysisChainNodeByFromNode;
     private FormalOutput formalOutput;
     private FormalInput formalInput;


    // Constructors

    /** default constructor */
    public AnalysisChainLink() {
    }
    
    /** constructor with id */
    public AnalysisChainLink(Integer analysisChainLinkId) {
        this.analysisChainLinkId = analysisChainLinkId;
    }
   
    
    

    // Property accessors

    /**
     * 
     */
    public Integer getAnalysisChainLinkId() {
        return this.analysisChainLinkId;
    }
    
    public void setAnalysisChainLinkId(Integer analysisChainLinkId) {
        this.analysisChainLinkId = analysisChainLinkId;
    }

    /**
     * 
     */
    public AnalysisChain getAnalysisChain() {
        return this.analysisChain;
    }
    
    public void setAnalysisChain(AnalysisChain analysisChain) {
        this.analysisChain = analysisChain;
    }

    /**
     * 
     */
    public AnalysisChainNode getAnalysisChainNodeByToNode() {
        return this.analysisChainNodeByToNode;
    }
    
    public void setAnalysisChainNodeByToNode(AnalysisChainNode analysisChainNodeByToNode) {
        this.analysisChainNodeByToNode = analysisChainNodeByToNode;
    }

    /**
     * 
     */
    public AnalysisChainNode getAnalysisChainNodeByFromNode() {
        return this.analysisChainNodeByFromNode;
    }
    
    public void setAnalysisChainNodeByFromNode(AnalysisChainNode analysisChainNodeByFromNode) {
        this.analysisChainNodeByFromNode = analysisChainNodeByFromNode;
    }

    /**
     * 
     */
    public FormalOutput getFormalOutput() {
        return this.formalOutput;
    }
    
    public void setFormalOutput(FormalOutput formalOutput) {
        this.formalOutput = formalOutput;
    }

    /**
     * 
     */
    public FormalInput getFormalInput() {
        return this.formalInput;
    }
    
    public void setFormalInput(FormalInput formalInput) {
        this.formalInput = formalInput;
    }





	/** utility methods. Container may re-assign this. */	
	protected static org.openmicroscopy.omero.BaseModelUtils _utils = 
		new org.openmicroscopy.omero.BaseModelUtils();
	public BaseModelUtils getUtils(){
		return _utils;
	}
	public void setUtils(BaseModelUtils utils){
		_utils = utils;
	}



}
