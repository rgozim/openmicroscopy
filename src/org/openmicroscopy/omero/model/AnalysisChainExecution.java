package org.openmicroscopy.omero.model;

import org.openmicroscopy.omero.BaseModelUtils;


import java.util.*;




/**
 * AnalysisChainExecution generated by hbm2java
 */
public class
AnalysisChainExecution 
implements java.io.Serializable ,
org.openmicroscopy.omero.OMEModel {

    // Fields    

     private Integer analysisChainExecutionId;
     private Date timestamp;
     private AnalysisChain analysisChain;
     private Set analysisNodeExecutions;
     private Dataset dataset;
     private Experimenter experimenter;


    // Constructors

    /** default constructor */
    public AnalysisChainExecution() {
    }
    
    /** constructor with id */
    public AnalysisChainExecution(Integer analysisChainExecutionId) {
        this.analysisChainExecutionId = analysisChainExecutionId;
    }
   
    
    

    // Property accessors

    /**
     * 
     */
    public Integer getAnalysisChainExecutionId() {
        return this.analysisChainExecutionId;
    }
    
    public void setAnalysisChainExecutionId(Integer analysisChainExecutionId) {
        this.analysisChainExecutionId = analysisChainExecutionId;
    }

    /**
     * 
     */
    public Date getTimestamp() {
        return this.timestamp;
    }
    
    public void setTimestamp(Date timestamp) {
        this.timestamp = timestamp;
    }

    /**
     * 
     */
    public AnalysisChain getAnalysisChain() {
        return this.analysisChain;
    }
    
    public void setAnalysisChain(AnalysisChain analysisChain) {
        this.analysisChain = analysisChain;
    }

    /**
     * 
     */
    public Set getAnalysisNodeExecutions() {
        return this.analysisNodeExecutions;
    }
    
    public void setAnalysisNodeExecutions(Set analysisNodeExecutions) {
        this.analysisNodeExecutions = analysisNodeExecutions;
    }

    /**
     * 
     */
    public Dataset getDataset() {
        return this.dataset;
    }
    
    public void setDataset(Dataset dataset) {
        this.dataset = dataset;
    }

    /**
     * 
     */
    public Experimenter getExperimenter() {
        return this.experimenter;
    }
    
    public void setExperimenter(Experimenter experimenter) {
        this.experimenter = experimenter;
    }





	/** utility methods. Container may re-assign this. */	
	protected static org.openmicroscopy.omero.BaseModelUtils _utils = 
		new org.openmicroscopy.omero.BaseModelUtils();
	public BaseModelUtils getUtils(){
		return _utils;
	}
	public void setUtils(BaseModelUtils utils){
		_utils = utils;
	}



}
