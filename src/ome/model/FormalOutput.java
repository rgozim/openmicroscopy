package ome.model;

import ome.util.BaseModelUtils;
import ome.util.Filterable;
import ome.util.Filter;


import java.util.*;




/**
 * FormalOutput generated by hbm2java
 */
public class
FormalOutput 
implements java.io.Serializable ,
ome.api.OMEModel,
ome.util.Filterable {

    // Fields    

     private Integer formalOutputId;
     private String featureTag;
     private Boolean optional;
     private String description;
     private Boolean list;
     private String name;
     private Module module;
     private Set analysisChainLinks;
     private SemanticType semanticType;


    // Constructors

    /** default constructor */
    public FormalOutput() {
    }
    
    /** constructor with id */
    public FormalOutput(Integer formalOutputId) {
        this.formalOutputId = formalOutputId;
    }
   
    
    

    // Property accessors

    /**
     * 
     */
    public Integer getFormalOutputId() {
        return this.formalOutputId;
    }
    
    public void setFormalOutputId(Integer formalOutputId) {
        this.formalOutputId = formalOutputId;
    }

    /**
     * 
     */
    public String getFeatureTag() {
        return this.featureTag;
    }
    
    public void setFeatureTag(String featureTag) {
        this.featureTag = featureTag;
    }

    /**
     * 
     */
    public Boolean getOptional() {
        return this.optional;
    }
    
    public void setOptional(Boolean optional) {
        this.optional = optional;
    }

    /**
     * 
     */
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * 
     */
    public Boolean getList() {
        return this.list;
    }
    
    public void setList(Boolean list) {
        this.list = list;
    }

    /**
     * 
     */
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    /**
     * 
     */
    public Module getModule() {
        return this.module;
    }
    
    public void setModule(Module module) {
        this.module = module;
    }

    /**
     * 
     */
    public Set getAnalysisChainLinks() {
        return this.analysisChainLinks;
    }
    
    public void setAnalysisChainLinks(Set analysisChainLinks) {
        this.analysisChainLinks = analysisChainLinks;
    }

    /**
     * 
     */
    public SemanticType getSemanticType() {
        return this.semanticType;
    }
    
    public void setSemanticType(SemanticType semanticType) {
        this.semanticType = semanticType;
    }






  public boolean acceptFilter(Filter filter){


	  // Visiting: FormalOutputId ------------------------------------------
	  Integer _FormalOutputId = null;
	  try {
	     _FormalOutputId = getFormalOutputId();
	  } catch (Exception e) {
		 setFormalOutputId(null);
	  }
// TODO catch class cast?
	  setFormalOutputId((Integer) filter.filter(FORMALOUTPUTID,_FormalOutputId)); 

	  // Visiting: FeatureTag ------------------------------------------
	  String _FeatureTag = null;
	  try {
	     _FeatureTag = getFeatureTag();
	  } catch (Exception e) {
		 setFeatureTag(null);
	  }
// TODO catch class cast?
	  setFeatureTag((String) filter.filter(FEATURETAG,_FeatureTag)); 

	  // Visiting: Optional ------------------------------------------
	  Boolean _Optional = null;
	  try {
	     _Optional = getOptional();
	  } catch (Exception e) {
		 setOptional(null);
	  }
// TODO catch class cast?
	  setOptional((Boolean) filter.filter(OPTIONAL,_Optional)); 

	  // Visiting: Description ------------------------------------------
	  String _Description = null;
	  try {
	     _Description = getDescription();
	  } catch (Exception e) {
		 setDescription(null);
	  }
// TODO catch class cast?
	  setDescription((String) filter.filter(DESCRIPTION,_Description)); 

	  // Visiting: List ------------------------------------------
	  Boolean _List = null;
	  try {
	     _List = getList();
	  } catch (Exception e) {
		 setList(null);
	  }
// TODO catch class cast?
	  setList((Boolean) filter.filter(LIST,_List)); 

	  // Visiting: Name ------------------------------------------
	  String _Name = null;
	  try {
	     _Name = getName();
	  } catch (Exception e) {
		 setName(null);
	  }
// TODO catch class cast?
	  setName((String) filter.filter(NAME,_Name)); 

	  // Visiting: Module ------------------------------------------
	  Module _Module = null;
	  try {
	     _Module = getModule();
	  } catch (Exception e) {
		 setModule(null);
	  }
// TODO catch class cast?
	  setModule((Module) filter.filter(MODULE,_Module)); 

	  // Visiting: AnalysisChainLinks ------------------------------------------
	  Set _AnalysisChainLinks = null;
	  try {
	     _AnalysisChainLinks = getAnalysisChainLinks();
	  } catch (Exception e) {
		 setAnalysisChainLinks(null);
	  }
// TODO catch class cast?
	  setAnalysisChainLinks((Set) filter.filter(ANALYSISCHAINLINKS,_AnalysisChainLinks)); 

	  // Visiting: SemanticType ------------------------------------------
	  SemanticType _SemanticType = null;
	  try {
	     _SemanticType = getSemanticType();
	  } catch (Exception e) {
		 setSemanticType(null);
	  }
// TODO catch class cast?
	  setSemanticType((SemanticType) filter.filter(SEMANTICTYPE,_SemanticType)); 
   	 return true;
  }
  
  public String toString(){
	return "FormalOutput"+(formalOutputId==null ? ":Hash_"+this.hashCode() : ":Id_"+formalOutputId);
  }
  
  // FIELD-FIELDS
  
	public final static String FORMALOUTPUTID = "FormalOutput_FormalOutputId";
	public final static String FEATURETAG = "FormalOutput_FeatureTag";
	public final static String OPTIONAL = "FormalOutput_Optional";
	public final static String DESCRIPTION = "FormalOutput_Description";
	public final static String LIST = "FormalOutput_List";
	public final static String NAME = "FormalOutput_Name";
	public final static String MODULE = "FormalOutput_Module";
	public final static String ANALYSISCHAINLINKS = "FormalOutput_AnalysisChainLinks";
	public final static String SEMANTICTYPE = "FormalOutput_SemanticType";
 	public final static Set FIELDS = new HashSet();
	static {
	   FIELDS.add(FORMALOUTPUTID);
	   FIELDS.add(FEATURETAG);
	   FIELDS.add(OPTIONAL);
	   FIELDS.add(DESCRIPTION);
	   FIELDS.add(LIST);
	   FIELDS.add(NAME);
	   FIELDS.add(MODULE);
	   FIELDS.add(ANALYSISCHAINLINKS);
	   FIELDS.add(SEMANTICTYPE);
 	}


}
