package ome.model;

import ome.util.BaseModelUtils;
import ome.util.Filterable;
import ome.util.Filter;


import java.util.*;




/**
 * AnalysisChain generated by hbm2java
 */
public class
AnalysisChain 
implements java.io.Serializable ,
ome.api.OMEModel,
ome.util.Filterable {

    // Fields    

     private Integer analysisChainId;
     private Boolean locked;
     private String name;
     private String description;
     private Set analysisChainExecutions;
     private Set analysisChainLinks;
     private Set analysisChainNodes;
     private Experimenter experimenter;


    // Constructors

    /** default constructor */
    public AnalysisChain() {
    }
    
    /** constructor with id */
    public AnalysisChain(Integer analysisChainId) {
        this.analysisChainId = analysisChainId;
    }
   
    
    

    // Property accessors

    /**
     * 
     */
    public Integer getAnalysisChainId() {
        return this.analysisChainId;
    }
    
    public void setAnalysisChainId(Integer analysisChainId) {
        this.analysisChainId = analysisChainId;
    }

    /**
     * 
     */
    public Boolean getLocked() {
        return this.locked;
    }
    
    public void setLocked(Boolean locked) {
        this.locked = locked;
    }

    /**
     * 
     */
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    /**
     * 
     */
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * 
     */
    public Set getAnalysisChainExecutions() {
        return this.analysisChainExecutions;
    }
    
    public void setAnalysisChainExecutions(Set analysisChainExecutions) {
        this.analysisChainExecutions = analysisChainExecutions;
    }

    /**
     * 
     */
    public Set getAnalysisChainLinks() {
        return this.analysisChainLinks;
    }
    
    public void setAnalysisChainLinks(Set analysisChainLinks) {
        this.analysisChainLinks = analysisChainLinks;
    }

    /**
     * 
     */
    public Set getAnalysisChainNodes() {
        return this.analysisChainNodes;
    }
    
    public void setAnalysisChainNodes(Set analysisChainNodes) {
        this.analysisChainNodes = analysisChainNodes;
    }

    /**
     * 
     */
    public Experimenter getExperimenter() {
        return this.experimenter;
    }
    
    public void setExperimenter(Experimenter experimenter) {
        this.experimenter = experimenter;
    }






  public boolean acceptFilter(Filter filter){


	  // Visiting: AnalysisChainId ------------------------------------------
	  Integer _AnalysisChainId = null;
	  try {
	     _AnalysisChainId = getAnalysisChainId();
	  } catch (Exception e) {
		 setAnalysisChainId(null);
	  }
// TODO catch class cast?
	  setAnalysisChainId((Integer) filter.filter(ANALYSISCHAINID,_AnalysisChainId)); 

	  // Visiting: Locked ------------------------------------------
	  Boolean _Locked = null;
	  try {
	     _Locked = getLocked();
	  } catch (Exception e) {
		 setLocked(null);
	  }
// TODO catch class cast?
	  setLocked((Boolean) filter.filter(LOCKED,_Locked)); 

	  // Visiting: Name ------------------------------------------
	  String _Name = null;
	  try {
	     _Name = getName();
	  } catch (Exception e) {
		 setName(null);
	  }
// TODO catch class cast?
	  setName((String) filter.filter(NAME,_Name)); 

	  // Visiting: Description ------------------------------------------
	  String _Description = null;
	  try {
	     _Description = getDescription();
	  } catch (Exception e) {
		 setDescription(null);
	  }
// TODO catch class cast?
	  setDescription((String) filter.filter(DESCRIPTION,_Description)); 

	  // Visiting: AnalysisChainExecutions ------------------------------------------
	  Set _AnalysisChainExecutions = null;
	  try {
	     _AnalysisChainExecutions = getAnalysisChainExecutions();
	  } catch (Exception e) {
		 setAnalysisChainExecutions(null);
	  }
// TODO catch class cast?
	  setAnalysisChainExecutions((Set) filter.filter(ANALYSISCHAINEXECUTIONS,_AnalysisChainExecutions)); 

	  // Visiting: AnalysisChainLinks ------------------------------------------
	  Set _AnalysisChainLinks = null;
	  try {
	     _AnalysisChainLinks = getAnalysisChainLinks();
	  } catch (Exception e) {
		 setAnalysisChainLinks(null);
	  }
// TODO catch class cast?
	  setAnalysisChainLinks((Set) filter.filter(ANALYSISCHAINLINKS,_AnalysisChainLinks)); 

	  // Visiting: AnalysisChainNodes ------------------------------------------
	  Set _AnalysisChainNodes = null;
	  try {
	     _AnalysisChainNodes = getAnalysisChainNodes();
	  } catch (Exception e) {
		 setAnalysisChainNodes(null);
	  }
// TODO catch class cast?
	  setAnalysisChainNodes((Set) filter.filter(ANALYSISCHAINNODES,_AnalysisChainNodes)); 

	  // Visiting: Experimenter ------------------------------------------
	  Experimenter _Experimenter = null;
	  try {
	     _Experimenter = getExperimenter();
	  } catch (Exception e) {
		 setExperimenter(null);
	  }
// TODO catch class cast?
	  setExperimenter((Experimenter) filter.filter(EXPERIMENTER,_Experimenter)); 
   	 return true;
  }
  
  public String toString(){
	return "AnalysisChain"+(analysisChainId==null ? ":Hash_"+this.hashCode() : ":Id_"+analysisChainId);
  }
  
  // FIELD-FIELDS
  
	public final static String ANALYSISCHAINID = "AnalysisChain_AnalysisChainId";
	public final static String LOCKED = "AnalysisChain_Locked";
	public final static String NAME = "AnalysisChain_Name";
	public final static String DESCRIPTION = "AnalysisChain_Description";
	public final static String ANALYSISCHAINEXECUTIONS = "AnalysisChain_AnalysisChainExecutions";
	public final static String ANALYSISCHAINLINKS = "AnalysisChain_AnalysisChainLinks";
	public final static String ANALYSISCHAINNODES = "AnalysisChain_AnalysisChainNodes";
	public final static String EXPERIMENTER = "AnalysisChain_Experimenter";
 	public final static Set FIELDS = new HashSet();
	static {
	   FIELDS.add(ANALYSISCHAINID);
	   FIELDS.add(LOCKED);
	   FIELDS.add(NAME);
	   FIELDS.add(DESCRIPTION);
	   FIELDS.add(ANALYSISCHAINEXECUTIONS);
	   FIELDS.add(ANALYSISCHAINLINKS);
	   FIELDS.add(ANALYSISCHAINNODES);
	   FIELDS.add(EXPERIMENTER);
 	}


}
