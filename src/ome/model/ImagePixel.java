package ome.model;

import ome.util.BaseModelUtils;
import ome.util.Filterable;
import ome.util.Filter;


import java.util.*;




/**
 * ImagePixel generated by hbm2java
 */
public class
ImagePixel 
implements java.io.Serializable ,
ome.api.OMEModel,
ome.util.Filterable {

    // Fields    

     private Integer attributeId;
     private String pixelType;
     private Integer sizeY;
     private Integer sizeZ;
     private String fileSha1;
     private Integer sizeT;
     private Long imageServerId;
     private Integer sizeX;
     private Integer sizeC;
     private Repository repository;
     private Set images;
     private Set channelComponents;
     private Image image;
     private ModuleExecution moduleExecution;


    // Constructors

    /** default constructor */
    public ImagePixel() {
    }
    
    /** constructor with id */
    public ImagePixel(Integer attributeId) {
        this.attributeId = attributeId;
    }
   
    
    

    // Property accessors

    /**
     * 
     */
    public Integer getAttributeId() {
        return this.attributeId;
    }
    
    public void setAttributeId(Integer attributeId) {
        this.attributeId = attributeId;
    }

    /**
     * 
     */
    public String getPixelType() {
        return this.pixelType;
    }
    
    public void setPixelType(String pixelType) {
        this.pixelType = pixelType;
    }

    /**
     * 
     */
    public Integer getSizeY() {
        return this.sizeY;
    }
    
    public void setSizeY(Integer sizeY) {
        this.sizeY = sizeY;
    }

    /**
     * 
     */
    public Integer getSizeZ() {
        return this.sizeZ;
    }
    
    public void setSizeZ(Integer sizeZ) {
        this.sizeZ = sizeZ;
    }

    /**
     * 
     */
    public String getFileSha1() {
        return this.fileSha1;
    }
    
    public void setFileSha1(String fileSha1) {
        this.fileSha1 = fileSha1;
    }

    /**
     * 
     */
    public Integer getSizeT() {
        return this.sizeT;
    }
    
    public void setSizeT(Integer sizeT) {
        this.sizeT = sizeT;
    }

    /**
     * 
     */
    public Long getImageServerId() {
        return this.imageServerId;
    }
    
    public void setImageServerId(Long imageServerId) {
        this.imageServerId = imageServerId;
    }

    /**
     * 
     */
    public Integer getSizeX() {
        return this.sizeX;
    }
    
    public void setSizeX(Integer sizeX) {
        this.sizeX = sizeX;
    }

    /**
     * 
     */
    public Integer getSizeC() {
        return this.sizeC;
    }
    
    public void setSizeC(Integer sizeC) {
        this.sizeC = sizeC;
    }

    /**
     * 
     */
    public Repository getRepository() {
        return this.repository;
    }
    
    public void setRepository(Repository repository) {
        this.repository = repository;
    }

    /**
     * 
     */
    public Set getImages() {
        return this.images;
    }
    
    public void setImages(Set images) {
        this.images = images;
    }

    /**
     * 
     */
    public Set getChannelComponents() {
        return this.channelComponents;
    }
    
    public void setChannelComponents(Set channelComponents) {
        this.channelComponents = channelComponents;
    }

    /**
     * 
     */
    public Image getImage() {
        return this.image;
    }
    
    public void setImage(Image image) {
        this.image = image;
    }

    /**
     * 
     */
    public ModuleExecution getModuleExecution() {
        return this.moduleExecution;
    }
    
    public void setModuleExecution(ModuleExecution moduleExecution) {
        this.moduleExecution = moduleExecution;
    }





	/** utility methods. Container may re-assign this. */	
	protected static ome.util.BaseModelUtils _utils = 
		new ome.util.BaseModelUtils();
	public BaseModelUtils getUtils(){
		return _utils;
	}
	public void setUtils(BaseModelUtils utils){
		_utils = utils;
	}

  public boolean acceptFilter(Filter filter){


	  // Visiting: AttributeId ------------------------------------------
	  Integer _AttributeId = null;
	  try {
	     _AttributeId = getAttributeId();
	  } catch (Exception e) {
		 setAttributeId(null);
	  }
// TODO catch class cast?
	  setAttributeId((Integer) filter.filter("org.hibernate.mapping.RootClass(ome.model.ImagePixel):AttributeId",_AttributeId)); 

	  // Visiting: PixelType ------------------------------------------
	  String _PixelType = null;
	  try {
	     _PixelType = getPixelType();
	  } catch (Exception e) {
		 setPixelType(null);
	  }
// TODO catch class cast?
	  setPixelType((String) filter.filter("org.hibernate.mapping.RootClass(ome.model.ImagePixel):PixelType",_PixelType)); 

	  // Visiting: SizeY ------------------------------------------
	  Integer _SizeY = null;
	  try {
	     _SizeY = getSizeY();
	  } catch (Exception e) {
		 setSizeY(null);
	  }
// TODO catch class cast?
	  setSizeY((Integer) filter.filter("org.hibernate.mapping.RootClass(ome.model.ImagePixel):SizeY",_SizeY)); 

	  // Visiting: SizeZ ------------------------------------------
	  Integer _SizeZ = null;
	  try {
	     _SizeZ = getSizeZ();
	  } catch (Exception e) {
		 setSizeZ(null);
	  }
// TODO catch class cast?
	  setSizeZ((Integer) filter.filter("org.hibernate.mapping.RootClass(ome.model.ImagePixel):SizeZ",_SizeZ)); 

	  // Visiting: FileSha1 ------------------------------------------
	  String _FileSha1 = null;
	  try {
	     _FileSha1 = getFileSha1();
	  } catch (Exception e) {
		 setFileSha1(null);
	  }
// TODO catch class cast?
	  setFileSha1((String) filter.filter("org.hibernate.mapping.RootClass(ome.model.ImagePixel):FileSha1",_FileSha1)); 

	  // Visiting: SizeT ------------------------------------------
	  Integer _SizeT = null;
	  try {
	     _SizeT = getSizeT();
	  } catch (Exception e) {
		 setSizeT(null);
	  }
// TODO catch class cast?
	  setSizeT((Integer) filter.filter("org.hibernate.mapping.RootClass(ome.model.ImagePixel):SizeT",_SizeT)); 

	  // Visiting: ImageServerId ------------------------------------------
	  Long _ImageServerId = null;
	  try {
	     _ImageServerId = getImageServerId();
	  } catch (Exception e) {
		 setImageServerId(null);
	  }
// TODO catch class cast?
	  setImageServerId((Long) filter.filter("org.hibernate.mapping.RootClass(ome.model.ImagePixel):ImageServerId",_ImageServerId)); 

	  // Visiting: SizeX ------------------------------------------
	  Integer _SizeX = null;
	  try {
	     _SizeX = getSizeX();
	  } catch (Exception e) {
		 setSizeX(null);
	  }
// TODO catch class cast?
	  setSizeX((Integer) filter.filter("org.hibernate.mapping.RootClass(ome.model.ImagePixel):SizeX",_SizeX)); 

	  // Visiting: SizeC ------------------------------------------
	  Integer _SizeC = null;
	  try {
	     _SizeC = getSizeC();
	  } catch (Exception e) {
		 setSizeC(null);
	  }
// TODO catch class cast?
	  setSizeC((Integer) filter.filter("org.hibernate.mapping.RootClass(ome.model.ImagePixel):SizeC",_SizeC)); 

	  // Visiting: Repository ------------------------------------------
	  Repository _Repository = null;
	  try {
	     _Repository = getRepository();
	  } catch (Exception e) {
		 setRepository(null);
	  }
// TODO catch class cast?
	  setRepository((Repository) filter.filter("org.hibernate.mapping.RootClass(ome.model.ImagePixel):Repository",_Repository)); 

	  // Visiting: Images ------------------------------------------
	  Set _Images = null;
	  try {
	     _Images = getImages();
	  } catch (Exception e) {
		 setImages(null);
	  }
// TODO catch class cast?
	  setImages((Set) filter.filter("org.hibernate.mapping.RootClass(ome.model.ImagePixel):Images",_Images)); 

	  // Visiting: ChannelComponents ------------------------------------------
	  Set _ChannelComponents = null;
	  try {
	     _ChannelComponents = getChannelComponents();
	  } catch (Exception e) {
		 setChannelComponents(null);
	  }
// TODO catch class cast?
	  setChannelComponents((Set) filter.filter("org.hibernate.mapping.RootClass(ome.model.ImagePixel):ChannelComponents",_ChannelComponents)); 

	  // Visiting: Image ------------------------------------------
	  Image _Image = null;
	  try {
	     _Image = getImage();
	  } catch (Exception e) {
		 setImage(null);
	  }
// TODO catch class cast?
	  setImage((Image) filter.filter("org.hibernate.mapping.RootClass(ome.model.ImagePixel):Image",_Image)); 

	  // Visiting: ModuleExecution ------------------------------------------
	  ModuleExecution _ModuleExecution = null;
	  try {
	     _ModuleExecution = getModuleExecution();
	  } catch (Exception e) {
		 setModuleExecution(null);
	  }
// TODO catch class cast?
	  setModuleExecution((ModuleExecution) filter.filter("org.hibernate.mapping.RootClass(ome.model.ImagePixel):ModuleExecution",_ModuleExecution)); 
   	 return true;
  }
  
  public String toString(){
	return "ImagePixel"+(attributeId==null ? ":Hash"+this.hashCode() : ":"+attributeId);
  }
  


}
