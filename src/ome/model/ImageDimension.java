package ome.model;

import ome.util.BaseModelUtils;
import ome.util.Filterable;
import ome.util.Filter;


import java.util.*;




/**
 * ImageDimension generated by hbm2java
 */
public class
ImageDimension 
implements java.io.Serializable ,
ome.api.OMEModel,
ome.util.Filterable {

    // Fields    

     private Integer attributeId;
     private Float pixelSizeC;
     private Float pixelSizeT;
     private Float pixelSizeX;
     private Float pixelSizeY;
     private Float pixelSizeZ;
     private Image image;
     private ModuleExecution moduleExecution;


    // Constructors

    /** default constructor */
    public ImageDimension() {
    }
    
    /** constructor with id */
    public ImageDimension(Integer attributeId) {
        this.attributeId = attributeId;
    }
   
    
    

    // Property accessors

    /**
     * 
     */
    public Integer getAttributeId() {
        return this.attributeId;
    }
    
    public void setAttributeId(Integer attributeId) {
        this.attributeId = attributeId;
    }

    /**
     * 
     */
    public Float getPixelSizeC() {
        return this.pixelSizeC;
    }
    
    public void setPixelSizeC(Float pixelSizeC) {
        this.pixelSizeC = pixelSizeC;
    }

    /**
     * 
     */
    public Float getPixelSizeT() {
        return this.pixelSizeT;
    }
    
    public void setPixelSizeT(Float pixelSizeT) {
        this.pixelSizeT = pixelSizeT;
    }

    /**
     * 
     */
    public Float getPixelSizeX() {
        return this.pixelSizeX;
    }
    
    public void setPixelSizeX(Float pixelSizeX) {
        this.pixelSizeX = pixelSizeX;
    }

    /**
     * 
     */
    public Float getPixelSizeY() {
        return this.pixelSizeY;
    }
    
    public void setPixelSizeY(Float pixelSizeY) {
        this.pixelSizeY = pixelSizeY;
    }

    /**
     * 
     */
    public Float getPixelSizeZ() {
        return this.pixelSizeZ;
    }
    
    public void setPixelSizeZ(Float pixelSizeZ) {
        this.pixelSizeZ = pixelSizeZ;
    }

    /**
     * 
     */
    public Image getImage() {
        return this.image;
    }
    
    public void setImage(Image image) {
        this.image = image;
    }

    /**
     * 
     */
    public ModuleExecution getModuleExecution() {
        return this.moduleExecution;
    }
    
    public void setModuleExecution(ModuleExecution moduleExecution) {
        this.moduleExecution = moduleExecution;
    }






  public boolean acceptFilter(Filter filter){


	  // Visiting: AttributeId ------------------------------------------
	  Integer _AttributeId = null;
	  try {
	     _AttributeId = getAttributeId();
	  } catch (Exception e) {
		 setAttributeId(null);
	  }
// TODO catch class cast?
	  setAttributeId((Integer) filter.filter("org.hibernate.mapping.RootClass(ome.model.ImageDimension):AttributeId",_AttributeId)); 

	  // Visiting: PixelSizeC ------------------------------------------
	  Float _PixelSizeC = null;
	  try {
	     _PixelSizeC = getPixelSizeC();
	  } catch (Exception e) {
		 setPixelSizeC(null);
	  }
// TODO catch class cast?
	  setPixelSizeC((Float) filter.filter("org.hibernate.mapping.RootClass(ome.model.ImageDimension):PixelSizeC",_PixelSizeC)); 

	  // Visiting: PixelSizeT ------------------------------------------
	  Float _PixelSizeT = null;
	  try {
	     _PixelSizeT = getPixelSizeT();
	  } catch (Exception e) {
		 setPixelSizeT(null);
	  }
// TODO catch class cast?
	  setPixelSizeT((Float) filter.filter("org.hibernate.mapping.RootClass(ome.model.ImageDimension):PixelSizeT",_PixelSizeT)); 

	  // Visiting: PixelSizeX ------------------------------------------
	  Float _PixelSizeX = null;
	  try {
	     _PixelSizeX = getPixelSizeX();
	  } catch (Exception e) {
		 setPixelSizeX(null);
	  }
// TODO catch class cast?
	  setPixelSizeX((Float) filter.filter("org.hibernate.mapping.RootClass(ome.model.ImageDimension):PixelSizeX",_PixelSizeX)); 

	  // Visiting: PixelSizeY ------------------------------------------
	  Float _PixelSizeY = null;
	  try {
	     _PixelSizeY = getPixelSizeY();
	  } catch (Exception e) {
		 setPixelSizeY(null);
	  }
// TODO catch class cast?
	  setPixelSizeY((Float) filter.filter("org.hibernate.mapping.RootClass(ome.model.ImageDimension):PixelSizeY",_PixelSizeY)); 

	  // Visiting: PixelSizeZ ------------------------------------------
	  Float _PixelSizeZ = null;
	  try {
	     _PixelSizeZ = getPixelSizeZ();
	  } catch (Exception e) {
		 setPixelSizeZ(null);
	  }
// TODO catch class cast?
	  setPixelSizeZ((Float) filter.filter("org.hibernate.mapping.RootClass(ome.model.ImageDimension):PixelSizeZ",_PixelSizeZ)); 

	  // Visiting: Image ------------------------------------------
	  Image _Image = null;
	  try {
	     _Image = getImage();
	  } catch (Exception e) {
		 setImage(null);
	  }
// TODO catch class cast?
	  setImage((Image) filter.filter("org.hibernate.mapping.RootClass(ome.model.ImageDimension):Image",_Image)); 

	  // Visiting: ModuleExecution ------------------------------------------
	  ModuleExecution _ModuleExecution = null;
	  try {
	     _ModuleExecution = getModuleExecution();
	  } catch (Exception e) {
		 setModuleExecution(null);
	  }
// TODO catch class cast?
	  setModuleExecution((ModuleExecution) filter.filter("org.hibernate.mapping.RootClass(ome.model.ImageDimension):ModuleExecution",_ModuleExecution)); 
   	 return true;
  }
  
  public String toString(){
	return "ImageDimension"+(attributeId==null ? ":Hash_"+this.hashCode() : ":Id_"+attributeId);
  }
  


}
