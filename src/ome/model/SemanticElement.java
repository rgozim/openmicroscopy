package ome.model;

import ome.util.BaseModelUtils;
import ome.util.Filterable;
import ome.util.Filter;


import java.util.*;




/**
 * SemanticElement generated by hbm2java
 */
public class
SemanticElement 
implements java.io.Serializable ,
ome.api.OMEModel,
ome.util.Filterable {

    // Fields    

     private Integer semanticElementId;
     private String name;
     private String description;
     private SemanticType semanticType;


    // Constructors

    /** default constructor */
    public SemanticElement() {
    }
    
    /** constructor with id */
    public SemanticElement(Integer semanticElementId) {
        this.semanticElementId = semanticElementId;
    }
   
    
    

    // Property accessors

    /**
     * 
     */
    public Integer getSemanticElementId() {
        return this.semanticElementId;
    }
    
    public void setSemanticElementId(Integer semanticElementId) {
        this.semanticElementId = semanticElementId;
    }

    /**
     * 
     */
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    /**
     * 
     */
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * 
     */
    public SemanticType getSemanticType() {
        return this.semanticType;
    }
    
    public void setSemanticType(SemanticType semanticType) {
        this.semanticType = semanticType;
    }





	/** utility methods. Container may re-assign this. */	
	protected static ome.util.BaseModelUtils _utils = 
		new ome.util.BaseModelUtils();
	public BaseModelUtils getUtils(){
		return _utils;
	}
	public void setUtils(BaseModelUtils utils){
		_utils = utils;
	}

  public boolean acceptFilter(Filter filter){


	  // Visiting: SemanticElementId ------------------------------------------
	  Integer _SemanticElementId = null;
	  try {
	     _SemanticElementId = getSemanticElementId();
	  } catch (Exception e) {
		 setSemanticElementId(null);
	  }
// TODO catch class cast?
	  setSemanticElementId((Integer) filter.filter("org.hibernate.mapping.RootClass(ome.model.SemanticElement):SemanticElementId",_SemanticElementId)); 

	  // Visiting: Name ------------------------------------------
	  String _Name = null;
	  try {
	     _Name = getName();
	  } catch (Exception e) {
		 setName(null);
	  }
// TODO catch class cast?
	  setName((String) filter.filter("org.hibernate.mapping.RootClass(ome.model.SemanticElement):Name",_Name)); 

	  // Visiting: Description ------------------------------------------
	  String _Description = null;
	  try {
	     _Description = getDescription();
	  } catch (Exception e) {
		 setDescription(null);
	  }
// TODO catch class cast?
	  setDescription((String) filter.filter("org.hibernate.mapping.RootClass(ome.model.SemanticElement):Description",_Description)); 

	  // Visiting: SemanticType ------------------------------------------
	  SemanticType _SemanticType = null;
	  try {
	     _SemanticType = getSemanticType();
	  } catch (Exception e) {
		 setSemanticType(null);
	  }
// TODO catch class cast?
	  setSemanticType((SemanticType) filter.filter("org.hibernate.mapping.RootClass(ome.model.SemanticElement):SemanticType",_SemanticType)); 
   	 return true;
  }
  
  public String toString(){
	return "SemanticElement"+(semanticElementId==null ? ":Hash"+this.hashCode() : ":"+semanticElementId);
  }
  


}
