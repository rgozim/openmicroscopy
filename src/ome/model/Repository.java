package ome.model;

import ome.util.BaseModelUtils;
import ome.util.Filterable;
import ome.util.Filter;


import java.util.*;




/**
 * Repository generated by hbm2java
 */
public class
Repository 
implements java.io.Serializable ,
ome.api.OMEModel,
ome.util.Filterable {

    // Fields    

     private Integer attributeId;
     private String imageServerUrl;
     private String path;
     private Boolean isLocal;
     private Set thumbnails;
     private Set imagePixels;
     private ModuleExecution moduleExecution;


    // Constructors

    /** default constructor */
    public Repository() {
    }
    
    /** constructor with id */
    public Repository(Integer attributeId) {
        this.attributeId = attributeId;
    }
   
    
    

    // Property accessors

    /**
     * 
     */
    public Integer getAttributeId() {
        return this.attributeId;
    }
    
    public void setAttributeId(Integer attributeId) {
        this.attributeId = attributeId;
    }

    /**
     * 
     */
    public String getImageServerUrl() {
        return this.imageServerUrl;
    }
    
    public void setImageServerUrl(String imageServerUrl) {
        this.imageServerUrl = imageServerUrl;
    }

    /**
     * 
     */
    public String getPath() {
        return this.path;
    }
    
    public void setPath(String path) {
        this.path = path;
    }

    /**
     * 
     */
    public Boolean getIsLocal() {
        return this.isLocal;
    }
    
    public void setIsLocal(Boolean isLocal) {
        this.isLocal = isLocal;
    }

    /**
     * 
     */
    public Set getThumbnails() {
        return this.thumbnails;
    }
    
    public void setThumbnails(Set thumbnails) {
        this.thumbnails = thumbnails;
    }

    /**
     * 
     */
    public Set getImagePixels() {
        return this.imagePixels;
    }
    
    public void setImagePixels(Set imagePixels) {
        this.imagePixels = imagePixels;
    }

    /**
     * 
     */
    public ModuleExecution getModuleExecution() {
        return this.moduleExecution;
    }
    
    public void setModuleExecution(ModuleExecution moduleExecution) {
        this.moduleExecution = moduleExecution;
    }






  public boolean acceptFilter(Filter filter){


	  // Visiting: AttributeId ------------------------------------------
	  Integer _AttributeId = null;
	  try {
	     _AttributeId = getAttributeId();
	  } catch (Exception e) {
		 setAttributeId(null);
	  }
// TODO catch class cast?
	  setAttributeId((Integer) filter.filter(ATTRIBUTEID,_AttributeId)); 

	  // Visiting: ImageServerUrl ------------------------------------------
	  String _ImageServerUrl = null;
	  try {
	     _ImageServerUrl = getImageServerUrl();
	  } catch (Exception e) {
		 setImageServerUrl(null);
	  }
// TODO catch class cast?
	  setImageServerUrl((String) filter.filter(IMAGESERVERURL,_ImageServerUrl)); 

	  // Visiting: Path ------------------------------------------
	  String _Path = null;
	  try {
	     _Path = getPath();
	  } catch (Exception e) {
		 setPath(null);
	  }
// TODO catch class cast?
	  setPath((String) filter.filter(PATH,_Path)); 

	  // Visiting: IsLocal ------------------------------------------
	  Boolean _IsLocal = null;
	  try {
	     _IsLocal = getIsLocal();
	  } catch (Exception e) {
		 setIsLocal(null);
	  }
// TODO catch class cast?
	  setIsLocal((Boolean) filter.filter(ISLOCAL,_IsLocal)); 

	  // Visiting: Thumbnails ------------------------------------------
	  Set _Thumbnails = null;
	  try {
	     _Thumbnails = getThumbnails();
	  } catch (Exception e) {
		 setThumbnails(null);
	  }
// TODO catch class cast?
	  setThumbnails((Set) filter.filter(THUMBNAILS,_Thumbnails)); 

	  // Visiting: ImagePixels ------------------------------------------
	  Set _ImagePixels = null;
	  try {
	     _ImagePixels = getImagePixels();
	  } catch (Exception e) {
		 setImagePixels(null);
	  }
// TODO catch class cast?
	  setImagePixels((Set) filter.filter(IMAGEPIXELS,_ImagePixels)); 

	  // Visiting: ModuleExecution ------------------------------------------
	  ModuleExecution _ModuleExecution = null;
	  try {
	     _ModuleExecution = getModuleExecution();
	  } catch (Exception e) {
		 setModuleExecution(null);
	  }
// TODO catch class cast?
	  setModuleExecution((ModuleExecution) filter.filter(MODULEEXECUTION,_ModuleExecution)); 
   	 return true;
  }
  
  public String toString(){
	return "Repository"+(attributeId==null ? ":Hash_"+this.hashCode() : ":Id_"+attributeId);
  }
  
  // FIELD-FIELDS
  
	public final static String ATTRIBUTEID = "Repository_AttributeId";
	public final static String IMAGESERVERURL = "Repository_ImageServerUrl";
	public final static String PATH = "Repository_Path";
	public final static String ISLOCAL = "Repository_IsLocal";
	public final static String THUMBNAILS = "Repository_Thumbnails";
	public final static String IMAGEPIXELS = "Repository_ImagePixels";
	public final static String MODULEEXECUTION = "Repository_ModuleExecution";
 	public final static Set FIELDS = new HashSet();
	static {
	   FIELDS.add(ATTRIBUTEID);
	   FIELDS.add(IMAGESERVERURL);
	   FIELDS.add(PATH);
	   FIELDS.add(ISLOCAL);
	   FIELDS.add(THUMBNAILS);
	   FIELDS.add(IMAGEPIXELS);
	   FIELDS.add(MODULEEXECUTION);
 	}


}
