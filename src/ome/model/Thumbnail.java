package ome.model;

import ome.util.BaseModelUtils;
import ome.util.Filterable;
import ome.util.Filter;


import java.util.*;




/**
 * Thumbnail generated by hbm2java
 */
public class
Thumbnail 
implements java.io.Serializable ,
ome.api.OMEModel,
ome.util.Filterable {

    // Fields    

     private Integer attributeId;
     private String path;
     private String mimeType;
     private Repository repository;
     private Image image;
     private ModuleExecution moduleExecution;


    // Constructors

    /** default constructor */
    public Thumbnail() {
    }
    
    /** constructor with id */
    public Thumbnail(Integer attributeId) {
        this.attributeId = attributeId;
    }
   
    
    

    // Property accessors

    /**
     * 
     */
    public Integer getAttributeId() {
        return this.attributeId;
    }
    
    public void setAttributeId(Integer attributeId) {
        this.attributeId = attributeId;
    }

    /**
     * 
     */
    public String getPath() {
        return this.path;
    }
    
    public void setPath(String path) {
        this.path = path;
    }

    /**
     * 
     */
    public String getMimeType() {
        return this.mimeType;
    }
    
    public void setMimeType(String mimeType) {
        this.mimeType = mimeType;
    }

    /**
     * 
     */
    public Repository getRepository() {
        return this.repository;
    }
    
    public void setRepository(Repository repository) {
        this.repository = repository;
    }

    /**
     * 
     */
    public Image getImage() {
        return this.image;
    }
    
    public void setImage(Image image) {
        this.image = image;
    }

    /**
     * 
     */
    public ModuleExecution getModuleExecution() {
        return this.moduleExecution;
    }
    
    public void setModuleExecution(ModuleExecution moduleExecution) {
        this.moduleExecution = moduleExecution;
    }






  public boolean acceptFilter(Filter filter){


	  // Visiting: AttributeId ------------------------------------------
	  Integer _AttributeId = null;
	  try {
	     _AttributeId = getAttributeId();
	  } catch (Exception e) {
		 setAttributeId(null);
	  }
// TODO catch class cast?
	  setAttributeId((Integer) filter.filter("org.hibernate.mapping.RootClass(ome.model.Thumbnail):AttributeId",_AttributeId)); 

	  // Visiting: Path ------------------------------------------
	  String _Path = null;
	  try {
	     _Path = getPath();
	  } catch (Exception e) {
		 setPath(null);
	  }
// TODO catch class cast?
	  setPath((String) filter.filter("org.hibernate.mapping.RootClass(ome.model.Thumbnail):Path",_Path)); 

	  // Visiting: MimeType ------------------------------------------
	  String _MimeType = null;
	  try {
	     _MimeType = getMimeType();
	  } catch (Exception e) {
		 setMimeType(null);
	  }
// TODO catch class cast?
	  setMimeType((String) filter.filter("org.hibernate.mapping.RootClass(ome.model.Thumbnail):MimeType",_MimeType)); 

	  // Visiting: Repository ------------------------------------------
	  Repository _Repository = null;
	  try {
	     _Repository = getRepository();
	  } catch (Exception e) {
		 setRepository(null);
	  }
// TODO catch class cast?
	  setRepository((Repository) filter.filter("org.hibernate.mapping.RootClass(ome.model.Thumbnail):Repository",_Repository)); 

	  // Visiting: Image ------------------------------------------
	  Image _Image = null;
	  try {
	     _Image = getImage();
	  } catch (Exception e) {
		 setImage(null);
	  }
// TODO catch class cast?
	  setImage((Image) filter.filter("org.hibernate.mapping.RootClass(ome.model.Thumbnail):Image",_Image)); 

	  // Visiting: ModuleExecution ------------------------------------------
	  ModuleExecution _ModuleExecution = null;
	  try {
	     _ModuleExecution = getModuleExecution();
	  } catch (Exception e) {
		 setModuleExecution(null);
	  }
// TODO catch class cast?
	  setModuleExecution((ModuleExecution) filter.filter("org.hibernate.mapping.RootClass(ome.model.Thumbnail):ModuleExecution",_ModuleExecution)); 
   	 return true;
  }
  
  public String toString(){
	return "Thumbnail"+(attributeId==null ? ":Hash_"+this.hashCode() : ":Id_"+attributeId);
  }
  


}
