package ome.model;

import ome.util.BaseModelUtils;
import ome.util.Filterable;
import ome.util.Filter;


import java.util.*;




/**
 * Group generated by hbm2java
 */
public class
Group 
implements java.io.Serializable ,
ome.api.OMEModel,
ome.util.Filterable {

    // Fields    

     private Integer attributeId;
     private String name;
     private Set datasets;
     private Set images;
     private Set projects;
     private Set experimenters;
     private Set moduleExecutions;
     private Set imageInfos;
     private Experimenter leader;
     private Experimenter contact;
     private ModuleExecution moduleExecution;


    // Constructors

    /** default constructor */
    public Group() {
    }
    
    /** constructor with id */
    public Group(Integer attributeId) {
        this.attributeId = attributeId;
    }
   
    
    

    // Property accessors

    /**
     * 
     */
    public Integer getAttributeId() {
        return this.attributeId;
    }
    
    public void setAttributeId(Integer attributeId) {
        this.attributeId = attributeId;
    }

    /**
     * 
     */
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    /**
     * 
     */
    public Set getDatasets() {
        return this.datasets;
    }
    
    public void setDatasets(Set datasets) {
        this.datasets = datasets;
    }

    /**
     * 
     */
    public Set getImages() {
        return this.images;
    }
    
    public void setImages(Set images) {
        this.images = images;
    }

    /**
     * 
     */
    public Set getProjects() {
        return this.projects;
    }
    
    public void setProjects(Set projects) {
        this.projects = projects;
    }

    /**
     * 
     */
    public Set getExperimenters() {
        return this.experimenters;
    }
    
    public void setExperimenters(Set experimenters) {
        this.experimenters = experimenters;
    }

    /**
     * 
     */
    public Set getModuleExecutions() {
        return this.moduleExecutions;
    }
    
    public void setModuleExecutions(Set moduleExecutions) {
        this.moduleExecutions = moduleExecutions;
    }

    /**
     * 
     */
    public Set getImageInfos() {
        return this.imageInfos;
    }
    
    public void setImageInfos(Set imageInfos) {
        this.imageInfos = imageInfos;
    }

    /**
     * 
     */
    public Experimenter getLeader() {
        return this.leader;
    }
    
    public void setLeader(Experimenter leader) {
        this.leader = leader;
    }

    /**
     * 
     */
    public Experimenter getContact() {
        return this.contact;
    }
    
    public void setContact(Experimenter contact) {
        this.contact = contact;
    }

    /**
     * 
     */
    public ModuleExecution getModuleExecution() {
        return this.moduleExecution;
    }
    
    public void setModuleExecution(ModuleExecution moduleExecution) {
        this.moduleExecution = moduleExecution;
    }





	/** utility methods. Container may re-assign this. */	
	protected static ome.util.BaseModelUtils _utils = 
		new ome.util.BaseModelUtils();
	public BaseModelUtils getUtils(){
		return _utils;
	}
	public void setUtils(BaseModelUtils utils){
		_utils = utils;
	}

  public boolean acceptFilter(Filter filter){


	  // Visiting: AttributeId ------------------------------------------
	  Integer _AttributeId = null;
	  try {
	     _AttributeId = getAttributeId();
	  } catch (Exception e) {
		 setAttributeId(null);
	  }
// TODO catch class cast?
	  setAttributeId((Integer) filter.filter("org.hibernate.mapping.RootClass(ome.model.Group):AttributeId",_AttributeId)); 

	  // Visiting: Name ------------------------------------------
	  String _Name = null;
	  try {
	     _Name = getName();
	  } catch (Exception e) {
		 setName(null);
	  }
// TODO catch class cast?
	  setName((String) filter.filter("org.hibernate.mapping.RootClass(ome.model.Group):Name",_Name)); 

	  // Visiting: Datasets ------------------------------------------
	  Set _Datasets = null;
	  try {
	     _Datasets = getDatasets();
	  } catch (Exception e) {
		 setDatasets(null);
	  }
// TODO catch class cast?
	  setDatasets((Set) filter.filter("org.hibernate.mapping.RootClass(ome.model.Group):Datasets",_Datasets)); 

	  // Visiting: Images ------------------------------------------
	  Set _Images = null;
	  try {
	     _Images = getImages();
	  } catch (Exception e) {
		 setImages(null);
	  }
// TODO catch class cast?
	  setImages((Set) filter.filter("org.hibernate.mapping.RootClass(ome.model.Group):Images",_Images)); 

	  // Visiting: Projects ------------------------------------------
	  Set _Projects = null;
	  try {
	     _Projects = getProjects();
	  } catch (Exception e) {
		 setProjects(null);
	  }
// TODO catch class cast?
	  setProjects((Set) filter.filter("org.hibernate.mapping.RootClass(ome.model.Group):Projects",_Projects)); 

	  // Visiting: Experimenters ------------------------------------------
	  Set _Experimenters = null;
	  try {
	     _Experimenters = getExperimenters();
	  } catch (Exception e) {
		 setExperimenters(null);
	  }
// TODO catch class cast?
	  setExperimenters((Set) filter.filter("org.hibernate.mapping.RootClass(ome.model.Group):Experimenters",_Experimenters)); 

	  // Visiting: ModuleExecutions ------------------------------------------
	  Set _ModuleExecutions = null;
	  try {
	     _ModuleExecutions = getModuleExecutions();
	  } catch (Exception e) {
		 setModuleExecutions(null);
	  }
// TODO catch class cast?
	  setModuleExecutions((Set) filter.filter("org.hibernate.mapping.RootClass(ome.model.Group):ModuleExecutions",_ModuleExecutions)); 

	  // Visiting: ImageInfos ------------------------------------------
	  Set _ImageInfos = null;
	  try {
	     _ImageInfos = getImageInfos();
	  } catch (Exception e) {
		 setImageInfos(null);
	  }
// TODO catch class cast?
	  setImageInfos((Set) filter.filter("org.hibernate.mapping.RootClass(ome.model.Group):ImageInfos",_ImageInfos)); 

	  // Visiting: Leader ------------------------------------------
	  Experimenter _Leader = null;
	  try {
	     _Leader = getLeader();
	  } catch (Exception e) {
		 setLeader(null);
	  }
// TODO catch class cast?
	  setLeader((Experimenter) filter.filter("org.hibernate.mapping.RootClass(ome.model.Group):Leader",_Leader)); 

	  // Visiting: Contact ------------------------------------------
	  Experimenter _Contact = null;
	  try {
	     _Contact = getContact();
	  } catch (Exception e) {
		 setContact(null);
	  }
// TODO catch class cast?
	  setContact((Experimenter) filter.filter("org.hibernate.mapping.RootClass(ome.model.Group):Contact",_Contact)); 

	  // Visiting: ModuleExecution ------------------------------------------
	  ModuleExecution _ModuleExecution = null;
	  try {
	     _ModuleExecution = getModuleExecution();
	  } catch (Exception e) {
		 setModuleExecution(null);
	  }
// TODO catch class cast?
	  setModuleExecution((ModuleExecution) filter.filter("org.hibernate.mapping.RootClass(ome.model.Group):ModuleExecution",_ModuleExecution)); 
   	 return true;
  }
  
  public String toString(){
	return "Group"+(attributeId==null ? ":Hash"+this.hashCode() : ":"+attributeId);
  }
  


}
