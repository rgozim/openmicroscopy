package ome.model;

import ome.util.BaseModelUtils;
import ome.util.Filterable;
import ome.util.Filter;


import java.util.*;




/**
 * ImageAnnotation generated by hbm2java
 */
public class
ImageAnnotation 
implements java.io.Serializable ,
ome.api.OMEModel,
ome.util.Filterable {

    // Fields    

     private Integer attributeId;
     private Integer theT;
     private String content;
     private Integer theC;
     private Integer theZ;
     private Boolean valid;
     private Image image;
     private ModuleExecution moduleExecution;


    // Constructors

    /** default constructor */
    public ImageAnnotation() {
    }
    
    /** constructor with id */
    public ImageAnnotation(Integer attributeId) {
        this.attributeId = attributeId;
    }
   
    
    

    // Property accessors

    /**
     * 
     */
    public Integer getAttributeId() {
        return this.attributeId;
    }
    
    public void setAttributeId(Integer attributeId) {
        this.attributeId = attributeId;
    }

    /**
     * 
     */
    public Integer getTheT() {
        return this.theT;
    }
    
    public void setTheT(Integer theT) {
        this.theT = theT;
    }

    /**
     * 
     */
    public String getContent() {
        return this.content;
    }
    
    public void setContent(String content) {
        this.content = content;
    }

    /**
     * 
     */
    public Integer getTheC() {
        return this.theC;
    }
    
    public void setTheC(Integer theC) {
        this.theC = theC;
    }

    /**
     * 
     */
    public Integer getTheZ() {
        return this.theZ;
    }
    
    public void setTheZ(Integer theZ) {
        this.theZ = theZ;
    }

    /**
     * 
     */
    public Boolean getValid() {
        return this.valid;
    }
    
    public void setValid(Boolean valid) {
        this.valid = valid;
    }

    /**
     * 
     */
    public Image getImage() {
        return this.image;
    }
    
    public void setImage(Image image) {
        this.image = image;
    }

    /**
     * 
     */
    public ModuleExecution getModuleExecution() {
        return this.moduleExecution;
    }
    
    public void setModuleExecution(ModuleExecution moduleExecution) {
        this.moduleExecution = moduleExecution;
    }





	/** utility methods. Container may re-assign this. */	
	protected static ome.util.BaseModelUtils _utils = 
		new ome.util.BaseModelUtils();
	public BaseModelUtils getUtils(){
		return _utils;
	}
	public void setUtils(BaseModelUtils utils){
		_utils = utils;
	}

  public boolean acceptFilter(Filter filter){


	  // Visiting: AttributeId ------------------------------------------
	  Integer _AttributeId = null;
	  try {
	     _AttributeId = getAttributeId();
	  } catch (Exception e) {
		 setAttributeId(null);
	  }
// TODO catch class cast?
	  setAttributeId((Integer) filter.filter("org.hibernate.mapping.RootClass(ome.model.ImageAnnotation):AttributeId",_AttributeId)); 

	  // Visiting: TheT ------------------------------------------
	  Integer _TheT = null;
	  try {
	     _TheT = getTheT();
	  } catch (Exception e) {
		 setTheT(null);
	  }
// TODO catch class cast?
	  setTheT((Integer) filter.filter("org.hibernate.mapping.RootClass(ome.model.ImageAnnotation):TheT",_TheT)); 

	  // Visiting: Content ------------------------------------------
	  String _Content = null;
	  try {
	     _Content = getContent();
	  } catch (Exception e) {
		 setContent(null);
	  }
// TODO catch class cast?
	  setContent((String) filter.filter("org.hibernate.mapping.RootClass(ome.model.ImageAnnotation):Content",_Content)); 

	  // Visiting: TheC ------------------------------------------
	  Integer _TheC = null;
	  try {
	     _TheC = getTheC();
	  } catch (Exception e) {
		 setTheC(null);
	  }
// TODO catch class cast?
	  setTheC((Integer) filter.filter("org.hibernate.mapping.RootClass(ome.model.ImageAnnotation):TheC",_TheC)); 

	  // Visiting: TheZ ------------------------------------------
	  Integer _TheZ = null;
	  try {
	     _TheZ = getTheZ();
	  } catch (Exception e) {
		 setTheZ(null);
	  }
// TODO catch class cast?
	  setTheZ((Integer) filter.filter("org.hibernate.mapping.RootClass(ome.model.ImageAnnotation):TheZ",_TheZ)); 

	  // Visiting: Valid ------------------------------------------
	  Boolean _Valid = null;
	  try {
	     _Valid = getValid();
	  } catch (Exception e) {
		 setValid(null);
	  }
// TODO catch class cast?
	  setValid((Boolean) filter.filter("org.hibernate.mapping.RootClass(ome.model.ImageAnnotation):Valid",_Valid)); 

	  // Visiting: Image ------------------------------------------
	  Image _Image = null;
	  try {
	     _Image = getImage();
	  } catch (Exception e) {
		 setImage(null);
	  }
// TODO catch class cast?
	  setImage((Image) filter.filter("org.hibernate.mapping.RootClass(ome.model.ImageAnnotation):Image",_Image)); 

	  // Visiting: ModuleExecution ------------------------------------------
	  ModuleExecution _ModuleExecution = null;
	  try {
	     _ModuleExecution = getModuleExecution();
	  } catch (Exception e) {
		 setModuleExecution(null);
	  }
// TODO catch class cast?
	  setModuleExecution((ModuleExecution) filter.filter("org.hibernate.mapping.RootClass(ome.model.ImageAnnotation):ModuleExecution",_ModuleExecution)); 
   	 return true;
  }
  
  public String toString(){
	return "ImageAnnotation"+(attributeId==null ? ":Hash"+this.hashCode() : ":"+attributeId);
  }
  


}
