pg.active_session=select count(id) from session s where s.closed is null and s.uuid = ?
pg.and_mimetype=\ and mimetype = ?
pg.config_value=select value from configuration where name = ?
pg.count_format=select count(*) from format where value = ?
pg.current_user_names=select distinct e.omename from experimenter e, groupexperimentermap m, experimentergroup g where e.id = m.child and m.parent = g.id and g.name = 'user';
pg.curr_val=select next_val from seq_table where sequence_name = ?
pg.db_uuid=select value from configuration where name = 'omero.db.uuid'
pg.db_version=select currentversion, currentpatch from dbpatch order by id desc limit 1
pg.dn_exp_maps=select dn, experimenter_id from password where dn is not null
pg.dn_for_user=select dn from password where experimenter_id = ?
pg.file_id_in_db=select id from originalfile where repo = ? and mimetype = 'text/x-python'
pg.file_repo=select repo from OriginalFile where id = ?
pg.find_repo_file=select id from originalfile where repo = ? and path = ? and name = ?
pg.get_delete_ids=select entityid from eventlog where action = 'DELETE' and entitytype = ?
pg.get_file_param_keys=select params[1:array_upper(params,1)][1:1] from originalfile where id = ?
pg.get_file_params=select params from originalfile where id = ?
pg.get_pixels_params=select params from pixels where id = ?
pg.get_pixels_params_keys=select params[1:array_upper(params,1)][1:1] from pixels where id = ?
pg.id_not_in=and id not in (:ids)
pg.insert_format=insert into format (id,permissions,value) select ome_nextval('seq_format'),-35,?
pg.insert_logs=INSERT INTO eventlog (id, permissions, entityid,entitytype, action, event) values (?,?,?,?,?,?)
pg.insert_password=insert into password values (?,?,?)
pg.insert_session=insert into session (id,permissions,timetoidle,timetolive,started,closed,defaulteventtype,uuid,owner,node) values (:sid,-35,:ttl,:tti,:start,null,:type,:uuid,:owner,:node)
pg.internal_uuid=SELECT id FROM node where uuid = ?
pg.is_file_in_repo=select count(id) from originalfile where repo = ? and id = ? and mimetype = 'text/x-python'
pg.log_loader_delete=delete from configuration where name = ?
pg.log_loader_insert=insert into configuration (name, value) values (?,?)
pg.log_loader_query=select value from configuration where name = ?
pg.log_loader_update=update configuration set value = ? where name = ?
pg.next_session=select ome_nextval('seq_session'::text)
pg.next_val=select ome_nextval(?,?)
pg.now=select now()
pg.password_hash=select hash from password where experimenter_id = ?
pg.remove_pass=delete from password where experimenter_id = ?
pg.repo_file=select path, repo from originalfile where id = ?
pg.repo_script_count=select count(id) from originalfile where repo = ? and mimetype = 'text/x-python'
pg.roi_by_image_and_ns=select id from roi where image = ? and ? = any (namespaces)
pg.session_id=SELECT id FROM session WHERE uuid = ?
pg.set_file_params_1=update originalfile set params = array[
pg.set_file_params_2=,
pg.set_file_params_3=array[?,?]
pg.set_file_params_null=update originalfile set params = null where id = ?
pg.set_file_params4=] where id = ?
pg.set_file_repo=update originalfile set repo = ? where id = ?
pg.set_pixel_params_null=update pixels set params = null where id = ?
pg.set_pixels_params_1=update pixels set params = array[
pg.set_pixels_params_2=,
pg.set_pixels_params_3=array[?,?]
pg.set_pixels_params_4=] where id = ?
pg.set_user_dn=update password set dn = ? where experimenter_id = ?
pg.shape_ids=select id from shape where roi = ?
pg.sync_jobs=update job set finished = now(), message = 'Forcibly closed', status = (select id from jobstatus where value = 'Error') where finished is null and ((started < ( now() - interval '1 hour' )) OR (started is null and scheduledFor < ( now() - interval '1 day' )))
pg.update_password=update password set hash = ? where experimenter_id = ?
pg.update_config=update configuration set value = ? where name = ?
pg.update_format=UPDATE session SET closed = now() WHERE uuid = ?
pg.update_pixels_name=update pixels set name = ? where id = ?
pg.update_pixels_path=update pixels set path = ? where id = ?
pg.update_pixels_repo=update pixels set repo = ? where id = ?
pg.user_id=select id from experimenter where omeName = ?
pg.user_groups=select g.name from experimentergroup g, groupexperimentermap m, experimenter e where omeName = ? and e.id = m.child and m.parent = g.id
