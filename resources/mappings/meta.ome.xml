<?xml version="1.0" encoding="UTF-8"?>
<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# $Id$
#
# Copyright 2006 University of Dundee. All rights reserved.
# Use is subject to license terms supplied in LICENSE.txt
#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->
<types>
<!-- MANAGEMENT -->
	<type id="ome.model.meta.ExperimenterGroup" named="true" described="true" annotated="true">
		<!-- Note: relates to Group in model-->
		<properties>
			<child name="groupExperimenterMap" type="ome.model.meta.GroupExperimenterMap" target="ome.model.meta.Experimenter"/>
		</properties>
	</type>
	<type id="ome.model.meta.Experimenter" global="true" annotated="true"><!-- TODO: review-->
		<properties>
			<parent name="groupExperimenterMap" ordered="true" type="ome.model.meta.GroupExperimenterMap" target="ome.model.meta.ExperimenterGroup"/>
			<!-- TODO: should be "at least one of firstName, lastName, email and omeName" -->
			<required name="omeName" type="string" unique="true"/>
			<required name="firstName" type="string"/>
			<optional name="middleName" type="string"/><!-- TODO: not in model-->
			<required name="lastName" type="string"/>
			<optional name="institution" type="string"/>
			<component id="ome.model.internal.Email" required="false">
				<optional name="email" type="string"/>
			</component>
			<!-- TODO: ## add to dsl [email/] -->
		</properties>
	</type>
	<link id="ome.model.meta.GroupExperimenterMap">
		<!-- Note: GroupExperimenterMap is not in model-->
		<properties>
			<from_parent type="ome.model.meta.ExperimenterGroup"/>
			<to_child type="ome.model.meta.Experimenter" ordered="true"/>
		</properties>
	</link>
	<!-- EVENTS -->
	<type id="ome.model.meta.Session" global="true" annotated="true">
		<!-- Note: Session is not in model-->
		<properties>
			<!-- Type & Group are not really optional. Needed to bootstrap.
                 Constraints are added later -->
			<required name="uuid" type="string"/>
			<required name="timeToIdle" type="long"/>
			<required name="timeToLive" type="long"/>
			<required name="started" type="timestamp"/>
			<optional name="closed" type="timestamp"/>
			<optional name="message" type="string"/>
			<required name="defaultPermissions" type="string"/>
			<required name="defaultEventType" type="string"/>
			<optional name="userAgent" type="string"/>
			<onemany name="events" type="ome.model.meta.Event" inverse="session"/>
<!--
            // with stateless session, catch exception.
            // agents per session? inuse?     // automatically join session if running by same user?
            // probably not. one session per user.
             * validation (or similar) must be in place to prevent vandalism of sess tbl.
             * meta package (rename admin?)
            -->
		</properties>
	</type>
	<enum id="ome.model.enums.EventType">
		<!-- Note: EventType is not in model-->
		<entry name="Import"/>
		<entry name="Internal"/>
		<entry name="Shoola"/>
		<entry name="User"/>
		<entry name="Task"/>
		<entry name="Test"/>
		<entry name="Processing"/>
		<entry name="FullText"/>
		<entry name="Sessions"/>
	</enum>
	<type id="ome.model.meta.Event" immutable="true" global="true">
		<!-- Note: Event is not in model-->
		<properties>
<!-- Type & Group are not really optional. Needed to bootstrap.
        Constraints are added later -->
			<optional name="status" type="string"/>
			<required name="time" type="timestamp"/>
			<required name="experimenter" type="ome.model.meta.Experimenter"/>
			<optional name="experimenterGroup" type="ome.model.meta.ExperimenterGroup"/>
			<optional name="type" type="ome.model.enums.EventType"/>
			<optional name="containingEvent" type="ome.model.meta.Event"/>
			<onemany name="logs" type="ome.model.meta.EventLog" inverse="event"/>
			<manyone name="session" type="ome.model.meta.Session"/>
		</properties>
	</type>
	<type id="ome.model.meta.EventLog" immutable="true" global="true">
		<!-- Note: EventLog is not in model-->
		<properties>
			<required name="entityId" type="long"/>
			<required name="entityType" type="string"/>
			<required name="action" type="string"/>
			<manyone name="event" type="ome.model.meta.Event"/>
		</properties>
	</type>
	<type id="ome.model.meta.ExternalInfo" immutable="true">
		<!-- Note: ExternalInfo not in model-->
		<properties>
			<required name="entityId" type="long" mutable="false"/>
			<required name="entityType" type="string" mutable="false"/>
			<optional name="lsid" type="string" mutable="false"/>
			<optional name="uuid" type="string" mutable="false"/>
		</properties>
	</type>
	<type id="ome.model.meta.DBPatch" immutable="true" global="true">
		<!-- Note: DBPatch is not in model-->
		<properties>
			<required name="currentVersion" type="string" mutable="false"/>
			<required name="currentPatch" type="int" mutable="false"/>
			<required name="previousVersion" type="string" mutable="false"/>
			<required name="previousPatch" type="int" mutable="false"/>
			<optional name="finished" type="timestamp" mutable="false"/>
			<optional name="message" type="string" mutable="false"/>
		</properties>
	</type>
	<type id="ome.model.meta.Share" global="true" superclass="ome.model.meta.Session">
		<!-- Note: Share is not in model-->
		<properties>
			<required name="itemCount" type="long"/>
			<required name="active" type="boolean"/>
			<required name="data" type="byte[]"/>
		</properties>
	</type>
</types>
