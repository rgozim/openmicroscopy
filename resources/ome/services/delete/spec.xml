<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# $Id$
#
# Copyright 2010 Glencoe Software, Inc. All rights reserved.
# Use is subject to license terms supplied in LICENSE.txt
#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->


<!--
TODO:
/Roi/FileAnnotation;REAP
/Roi/RoiAnnotationLink;ORPHAN
How to handle more than one path:

 * how to handle back-up identifiers of sub-items.

 * would sub-items ever take a different ID??

 * introduce breaks between sub-steps? (iterator perhaps)

/Image:
 /Image does this even exist?

 * delete project with cross-linked dataset!

                 <value>/Image/Pixels/RelatedTo;NULL</value>
plus test REAP
-->

<beans>

    <description>

    Describes delete specifications which map a single string to a graph of
    objects which will be deleted. Each specification takes some number of parameters
    which describe which roots of the graph will be chosen.

    </description>


   <!-- SETUP ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

    <bean id="deleteSpecFactory" class="ome.services.delete.DeleteSpecFactory" singleton="false"/>

    <bean id="delSpec"  abstract="true" class="ome.services.delete.BaseDeleteSpec" singleton="false">
        <description>
        Delete specification which takes a single id as the identifier for where
        the graph of objects to be deleted starts.
        </description>
        <property name="currentDetails"   ref="currentDetails"/>
        <property name="extendedMetadata" ref="extendedMetadata"/>
    </bean>

   <!-- SPECIFCATIONS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

    <bean parent="delSpec" name="/Annotation" class="ome.services.delete.AnnotationDeleteSpec">
        <description>
        Lists all abstract and concrete annotation types as steps with their 
        default operations.

        This list is checked at startup to make sure that no values have been 
        omitted.
        In the implementation, the type hierarchy is used to apply user options 
        to the given type and all sub-types.

        For example, if /BasicAnnotation=KEEP is applied,
        then boolean, double, long, term, and timestamp
        annotations will all be marked KEEP.

        Order represents the hierarchy, from bottom to type.
        </description>
        <constructor-arg>
            <map>
                <entry key="/FileAnnotation" value="openmicroscopy.org/omero/import/companionFile,openmicroscopy.org/omero/measurement"/>
            </map>
        </constructor-arg>
        <constructor-arg>
            <list>
               <value>/FileAnnotation</value>
               <value>/FileAnnotation/OriginalFile</value>
               <value>/TypeAnnotation</value>
               <value>/ListAnnotation</value>
               <value>/XmlAnnotation</value>
               <value>/TagAnnotation</value>
               <value>/CommentAnnotation</value>
               <value>/TextAnnotation</value>
               <value>/TimestampAnnotation</value>
               <value>/TermAnnotation</value>
               <value>/LongAnnotation</value>
               <value>/DoubleAnnotation</value>
               <value>/NumericAnnotation</value>
               <value>/BooleanAnnotation</value>
               <value>/BasicAnnotation</value>
               <value>/Annotation</value>
            </list>
        </constructor-arg>
    </bean>

    <bean parent="delSpec" name="/Roi">
        <description>
        Deletes a
        </description>
        <constructor-arg>
            <list>
                <value>/Roi/Shape</value>
                <value>/Roi/RoiAnnotationLink</value>
                <value>/Annotation;SOFT;/Roi/RoiAnnotationLink/</value>
                <value>/Roi</value>
            </list>
        </constructor-arg>
    </bean>

    <bean parent="delSpec" name="/Image/Pixels/RenderingDef">
        <description>
        Deletes a rendering def based on the image id from where it comes.
        </description>
        <constructor-arg>
            <list>
                <value>/Image/Pixels/RenderingDef/ChannelBinding</value>
                <value>/Image/Pixels/RenderingDef/CodomainMapContext</value>
                <value>/Image/Pixels/RenderingDef</value>
                <value>/Image/Pixels/RenderingDef/QuantumDef</value>
            </list>
        </constructor-arg>

    </bean>

    <bean parent="delSpec" name="/Image/Pixels/Channel">
        <description>
        Deletes a Channel
        </description>
        <constructor-arg>
            <list>
                <value>/Image/Pixels/Channel</value>
                <value>/Image/Pixels/Channel/StatsInfo</value>
                <value>/Image/Pixels/Channel/LogicalChannel;SOFT</value> <!-- REAP -->
                <!-- value>/Image/Pixels/Channel/LogicalChannel/OTF;REAP</value -->
                <value>/Image/Pixels/Channel/LogicalChannel/LightSettings;SOFT</value>
                <!-- value>/Image/Pixels/Channel/LogicalChannel/LightSettings/LightSource;SOFT</value -->
                <value>/Image/Pixels/Channel/LogicalChannel/LightSettings/MicrobeamManipulation</value>
                <value>/Image/Pixels/Channel/LogicalChannel/DetectorSettings;SOFT</value>
                <!-- value>/Image/Pixels/Channel/LogicalChannel/DetectorSettings/Detector;SOFT</value -->
                <value>/Image/Pixels/Channel/LogicalChannel/LightPath/LightPathEmissionFilterLink</value>
                <!-- value>/Image/Pixels/Channel/LogicalChannel/LightPath/LightPathEmissionFilterLink/Filter;SOFT</value -->
                <value>/Image/Pixels/Channel/LogicalChannel/LightPath/LightPathExcitationFilterLink</value>
                <!-- value>/Image/Pixels/Channel/LogicalChannel/LightPath/LightPathExcitationFilterLink/Filter;SOFT</value -->
                <value>/Image/Pixels/Channel/LogicalChannel/LightPath;SOFT</value>
                <!-- value>/Image/Pixels/Channel/LogicalChannel/LightPath/Dichroic;SOFT</value -->
            </list>
        </constructor-arg>
    </bean>

    <bean parent="delSpec" name="/Instrument">
        <constructor-arg>
            <list>
                <value>/Instrument/Detector</value>
                <value>/Instrument/Dichroic</value>
                <value>/Instrument/Filter</value>
                <!-- value>/Instrument/FilterSet</value -->
                <value>/Instrument/LightSource</value>
                <value>/Instrument/OTF</value> <!--  related to filterSet and Objective -->
                <value>/Instrument/Objective</value>
                <value>/Instrument/FilterSet</value> 
                <value>/Instrument</value>
                <value>/Instrument/Microscope</value>
            </list>
        </constructor-arg>
    </bean>

    <bean parent="delSpec" name="/Image">
        <description>
        The /Image specification is equivalent to the original
        deleteImage method as specified in ome.api.IDelete.
        </description>
        <constructor-arg>
            <list>
                <value>/Roi;ORPHAN;/Image</value>
                <value>/Image/Pixels/PixelsOriginalFileMap;REAP</value>
                <value>/OriginalFile;;/Image/Pixels/PixelsOriginalFileMap</value>
                <value>/Image/Pixels/PlaneInfo</value>
                <value>/Image/Pixels/RenderingDef</value><!-- FORCE, for admins? -->
                <value>/Image/Pixels/Channel</value>
                <value>/Image/Pixels/Thumbnail;REAP</value><!-- HARD -->
                <value>/Image/Pixels</value>
                <value>/Image/ImageAnnotationLink;REAP</value>
                <value>/Annotation;SOFT;/Image/ImageAnnotationLink</value>
                <value>/Image/DatasetImageLink</value>
                <value>/Image</value>
                <value>/Image/ImagingEnvironment</value>
                <value>/Image/ObjectiveSettings;SOFT</value>
                <!-- value>/Image/ObjectiveSettings/Objective;SOFT</value -->
                <value>/Image/StageLabel</value>
                <value>/Image/Experiment</value><!--  used by microbeam also -->
                <value>/Instrument;SOFT;/Image</value>
            </list>
        </constructor-arg>
    </bean>

    <bean parent="delSpec" name="/OriginalFile">
        <constructor-arg>
            <list>
                <value>/OriginalFile/OriginalFileAnnotationLink;REAP</value>
                 <value>/Annotation;SOFT;/OriginalFile/OriginalFileAnnotationLink</value>
                <value>/OriginalFile</value>
            </list>
        </constructor-arg>
    </bean>

    <bean parent="delSpec" name="/Dataset">
        <constructor-arg>
            <list>
                <value>/Image;;/Dataset/DatasetImageLink</value><!-- assumes you can get in one jump with a link -->
                <value>/Dataset/DatasetImageLink</value><!-- Adding in case image is set to KEEP -->
                <value>/Dataset/ProjectDatasetLink</value>
                <value>/Dataset/DatasetAnnotationLink;REAP</value>
                <value>/Annotation;SOFT;/Dataset/DatasetAnnotationLink</value>
                <value>/Dataset</value>
            </list>
        </constructor-arg>
    </bean>

    <bean parent="delSpec" name="/Project">
        <constructor-arg>
            <list>
                <value>/Dataset;;/Project/ProjectDatasetLink</value>
                <value>/Project/ProjectDatasetLink</value><!-- Adding in case dataset is set to KEEP -->
                <value>/Project/ProjectAnnotationLink</value>
                <value>/Annotation;SOFT;/Project/ProjectAnnotationLink</value>
                <value>/Project</value>
            </list>
        </constructor-arg>
    </bean>

    <bean parent="delSpec" name="/Well">
        <constructor-arg>
            <list>
                <value>/Well/WellSample/WellSampleAnnotationLink</value>
                <value>/Annotation;SOFT;/Well/WellSample/WellSampleAnnotationLink</value>
                <value>/Well/WellSample</value>
                <value>/Image;;/Well/WellSample</value>
                <value>/Well/WellAnnotationLink</value>
                <value>/Annotation;SOFT;/Well/WellAnnotationLink</value>
                <value>/Well/WellReagentLink</value>
                <value>/Well</value>
            </list>
        </constructor-arg>
    </bean>

    <bean parent="delSpec" name="/Plate">
        <constructor-arg>
            <list>
                <value>/Well;;/Plate</value>
                <value>/Plate/PlateAcquisition/PlateAcquisitionAnnotationLink</value>
                <value>/Annotation;SOFT;/Plate/PlateAcquisition/PlateAcquisitionAnnotationLink</value>
                <value>/Plate/PlateAcquisition</value>
                <value>/Plate/PlateAnnotationLink</value>
                <value>/Annotation;SOFT;/Plate/PlateAnnotationLink</value>
                <value>/Plate/ScreenPlateLink</value><!-- TODO: or do we need Plate+SPL -->
                <value>/Plate</value>
            </list>
        </constructor-arg>
    </bean>

    <bean parent="delSpec" name="/PlateAcquisition">
        <constructor-arg>
            <list>
                <value>/PlateAcquisition/PlateAcquisitionAnnotationLink</value>
                <value>/Annotation;SOFT;/PlateAcquisition/PlateAcquisitionAnnotationLink</value>
                <value>/PlateAcquisition/WellSample/WellSampleAnnotationLink</value>
                <value>/Annotation;SOFT;/PlateAcquisition/WellSample/WellSampleAnnotationLink</value>
                <value>/PlateAcquisition/WellSample</value>
                 <value>/Image;;/PlateAcquisition/WellSample</value>
                <value>/PlateAcquisition</value>
            </list>
        </constructor-arg>
    </bean>
    
    <bean parent="delSpec" name="/Screen">
        <constructor-arg>
            <list>
                <value>/Plate;;/Screen/ScreenPlateLink</value>
                <value>/Screen/ScreenPlateLink</value><!-- Adding in case plate is set to KEEP -->
                <value>/Screen/ScreenAnnotationLink</value>
                <value>/Annotation;SOFT;/Screen/ScreenAnnotationLink</value>
                <value>/Screen/Reagent/ReagentAnnotationLink</value>
                <value>/Annotation;SOFT;/Screen/Reagent/ReagentAnnotationLink</value>
                <value>/Screen/Reagent</value>
                <value>/Screen</value>
            </list>
        </constructor-arg>
    </bean>

</beans>
