<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# $Id$
#
# Copyright 2010 Glencoe Software, Inc. All rights reserved.
# Use is subject to license terms supplied in LICENSE.txt
#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->

<beans>

    <description>

    Describes delete specifications which map a single string to a graph of
    objects which will be deleted. Each specification takes some number of parameters
    which describe which roots of the graph will be chosen.

    </description>


   <!-- SETUP ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

    <bean id="deleteSpecFactory" class="ome.services.delete.DeleteSpecFactory" singleton="false"/>

    <bean id="delSpec"  abstract="true" class="ome.services.delete.BaseDeleteSpec" singleton="false">
        <description>
        Delete specification which takes a single id as the identifier for where
        the graph of objects to be deleted starts.
        </description>
        <property name="extendedMetadata" ref="extendedMetadata"/>
    </bean>

   <!-- SPECIFCATIONS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

    <bean parent="delSpec" name="/Roi">
        <description>
        Deletes a
        </description>
        <constructor-arg>
            <list>
                <value>/Roi/Shape</value>
                <value>/Roi/RoiAnnotationLink</value>
                <value>/Roi</value>
            </list>
        </constructor-arg>
    </bean>

<!--
TODO:
/Roi/FileAnnotation;REAP
/Roi/RoiAnnotationLink;ORPHAN
How to handle more than one path:

 * how to handle backupids of sub items.

 * would subitems ever take a diferent ID??

 * introduce breaks between substeps? (iterator perhaps)

/Image:
 /Image does this even exist?

 * delete project with cross-linked dataset!
-->

    <bean parent="delSpec" name="/Image/Pixels/RenderingDef">
        <description>
        Deletes a rendering def based on the image id from where it comes.
        </description>
        <constructor-arg>
            <list>
                <value>/Image/Pixels/RenderingDef/ChannelBinding</value>
                <value>/Image/Pixels/RenderingDef</value>
                <value>/Image/Pixels/RenderingDef/QuantumDef</value>
            </list>
        </constructor-arg>

    </bean>

    <bean parent="delSpec" name="/Image/Pixels/Channel">
        <description>
        Deletes a Channel
        </description>
        <constructor-arg>
            <list>
                <value>/Image/Pixels/Channel</value>
                <value>/Image/Pixels/Channel/StatsInfo</value>
                <value>/Image/Pixels/Channel/LogicalChannel;REAP</value>
            </list>
        </constructor-arg>

    </bean>

    <bean parent="delSpec" name="/Image">
        <description>
        The /Image specification is equivalent to the original
        deleteImage method as specified in ome.api.IDelete.
        </description>
        <constructor-arg>
            <list>
                <value>/Roi;ORPHAN;/Image</value>
    <!--
TODO:
                <value>/Image/Pixels/RelatedTo;NULL</value>
plus test REAP
    -->
                <value>/Image/Pixels/PixelsOriginalFileMap;REAP</value>
                <value>/Image/Pixels/PlaneInfo</value>
                <value>/Image/Pixels/RenderingDef</value><!-- FORCE, for admins? -->
                <value>/Image/Pixels/Channel</value>
                <value>/Image/Pixels/Thumbnail;REAP</value><!-- HARD -->
                <value>/Image/Pixels</value>
                <value>/Image/ImageAnnotationLink;REAP</value>
                <value>/Image/DatasetImageLink</value>
                <value>/Image</value>
            </list>
        </constructor-arg>
    </bean>

    <bean parent="delSpec" name="/Dataset">
        <constructor-arg>
            <list>
                <value>/Image;;/Dataset/DatasetImageLink</value><!-- assumes you can get in one jump with a link -->
                <value>/Dataset/ProjectDatasetLink</value>
                <value>/Dataset/DatasetAnnotationLink;REAP</value>
                <value>/Dataset</value>
            </list>
        </constructor-arg>
    </bean>

    <bean parent="delSpec" name="/Project">
        <constructor-arg>
            <list>
                <value>/Dataset;;/Project/ProjectDatasetLink</value>
                <value>/Project/ProjectAnnotationLink</value>
                <value>/Project</value>
            </list>
        </constructor-arg>
    </bean>

    <bean parent="delSpec" name="/Well">
        <constructor-arg>
            <list>
                <value>/Well/WellSample/WellSampleAnnotationLink</value>
                <value>/Well/WellSample</value>
                <value>/Image;;/Well/WellSample</value>
                <value>/Well/WellAnnotationLink</value>
                <value>/Well</value>
            </list>
        </constructor-arg>
    </bean>

    <bean parent="delSpec" name="/Plate">
        <constructor-arg>
            <list>
                <value>/Well;;/Plate</value>
                <value>/Plate/PlateAcquisition</value>
                <value>/Plate/PlateAnnotationLink</value>
                <value>/Plate/ScreenPlateLink</value><!-- TODO: or do we need Plate+SPL -->
                <value>/Plate</value>
            </list>
        </constructor-arg>
    </bean>

    <bean parent="delSpec" name="/Screen">
        <constructor-arg>
            <list>
                <value>/Plate;;/Screen/ScreenPlateLink</value>
                <value>/Screen/ScreenAnnotationLink</value>
                <value>/Screen</value>
            </list>
        </constructor-arg>
    </bean>

</beans>
