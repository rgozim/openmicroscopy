<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# 
# $Id$
# 
# Copyright 2006 University of Dundee. All rights reserved.
# Use is subject to license terms supplied in LICENSE.txt
#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->

<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Written by:  Josh Moore <josh.moore@gmx.de>
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->

<!--

	Testing JMS from ActiveMQ
	TODO: see Lingo! (full callbacks!)
 
-->

<beans>	

  <bean id="broker" class="org.activemq.spring.BrokerFactoryBean">
    <property name="config" value="WEB-INF/vm.xml"/>
  </bean>
	
  <!-- a pooling based JMS provider -->
  <bean id="jmsFactory" class="org.activemq.pool.PooledConnectionFactory">
    <property name="connectionFactory">
      <bean class="org.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="vm://localhost"/>
		<property name="useEmbeddedBroker" value="false"/>
      </bean>
    </property>
  </bean>

  <!-- Spring JMS Template -->
  <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
    <property name="connectionFactory" ref="jmsFactory"/>
    <property name="defaultDestinationName" value="TEST"/>
  </bean>

	
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		Everything below here is actually for the client. MDB's and such
	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~	-->
	<!--
    || A JCA container for ActiveMQ
    -->

	<bean id="activeMQContainer" class="org.activemq.jca.JCAContainer">

	<!--
	 the work manager (thread pool) for this container 
	-->
	<property name="workManager">
		<bean id="workManager" class="org.activemq.work.SpringWorkManager"></bean>
	</property>
	
	<!-- the JCA Resource Adapter -->
	<property name="resourceAdapter">
		<bean id="activeMQResourceAdapter" class="org.activemq.ra.ActiveMQResourceAdapter">
			<property name="serverUrl" value="vm://localhost"/>
		</bean>
	</property>

	</bean>

	<!--
    || an inbound message connector using a stateless, thread safe MessageListener
	-->

	<bean id="mdb" factory-method="addConnector" 
		                       factory-bean="activeMQContainer" singleton="true">
	<!-- subscription details -->

	<!-- TODO: (don't need pooling if reentrant)
	Two desitinations: ALL.Topic
					   ${host}${user}.Queue 
		
		msgs to All.Topic are handled by one Handler.
		msgs to <me>.Queue are handled by another.
		Callbacks are registered with <me>.Queue by hash.put(corrId,callback) {WeakRef?}
		
		Other possible Topics:
		 * NewClasses.Topic
		 * NewImages.Topic
		 * DeletedImages.Topic
		 * Deletion.Topic
		 * ...
	-->
	<property name="activationSpec">
		<bean class="org.activemq.ra.ActiveMQActivationSpec">

		<property name="destination">
			<value>ASYN</value>
		</property>

		<property name="destinationType">
			<value>javax.jms.Queue</value>
		</property>
		</bean>
	</property>
	
	<property name="ref" value="pooledBean"/>
	
	</bean>

	<!--
    || Message Driven POJOs
    -->

	<!-- a thread safe non-pooled MessageListener i.e. Dispatcher -->
	<bean id="bean" class="ome.server.itests.JmsTest" singleton="true"/>

	<!--
 	a pooled, non-thread safe MessageListener using ProxyFactoryBean 
	-->
  	<bean id="pooledBean" class="org.activemq.jca.TargetSourceMessageListener">
    <property name="targetSource">
      <bean id="pooledBeanTargetSource" class="org.springframework.aop.target.CommonsPoolTargetSource">
        <property name="targetBeanName">
          <value>pooledBeanTarget</value>
        </property>
        <property name="maxSize">
          <value>25</value>
        </property>
      </bean>
    </property>
  </bean>
  <bean id="pooledBeanTarget" class="ome.server.itests.JmsTest" singleton="false">
  </bean>
  
</beans>
