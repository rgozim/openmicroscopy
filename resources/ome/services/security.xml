<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# $Id$
#
# Copyright 2006 University of Dundee. All rights reserved.
# Use is subject to license terms supplied in LICENSE.txt
#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->

<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Written by:  Josh Moore <josh.moore@gmx.de>
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->

<!--

  security.xml defines the interceptors for all methods which need
  authentication and authorization.

  TODO : refactor so security can be turned on or off by omitting this file.
	     currently services.xml shouldn't really have a dependency on this file.
	     or a no-security.xml

-->

<beans>

  <bean id="securitySystem" class="ome.security.basic.BasicSecuritySystem">
    <constructor-arg ref="roles"/>    
  </bean>
  <!-- Due to several circular dependencies, the security system which is used
  frequently, has several of its dependencies loaded by a post processor -->
  <bean class="ome.tools.spring.PostProcessInjector">
    <description>
    Scope: private
    </description>
    <property name="securitySystem" ref="securitySystem"/>
    <property name="extendedMetadata" ref="extendedMetadata"/>
    <property name="sessionManager" ref="sessionManager"/>
    <property name="adminService" ref="internal:ome.api.IAdmin"/>
    <property name="queryService" ref="internal:ome.api.IQuery"/>
    <property name="updateService" ref="internal:ome.api.IUpdate"/>
  </bean>

  <bean id="roles" class="ome.system.Roles"/>
  
  <!-- Scope: private -->

  <bean id="securityWiring" class="ome.security.basic.BasicSecurityWiring"
  	lazy-init="true">
  	<property name="securitySystem" ref="securitySystem"/>
  	<property name="methodSecurity" ref="methodSecurity"/>
  </bean>

  <bean id="eventListeners" class="ome.security.basic.EventListenersFactoryBean">
    <description>
    Scope: private
    </description>
    <constructor-arg ref="securitySystem"/>
    <property name="debugAll" value="false"/>
  </bean>

  <bean id="eventHandler" class="ome.security.basic.EventHandler">
    <description>
    Scope: private
    </description>
  	<constructor-arg ref="securitySystem"/>
  	<constructor-arg ref="hibernateTemplate"/>
  </bean>

  <bean id="omeroInterceptor" class="ome.security.basic.OmeroInterceptor">
    <description>
    Scope: private
    </description>
    <constructor-arg ref="securitySystem"/>
  </bean>

  <bean id="securityFilter" class="ome.tools.hibernate.SecurityFilter">
    <description>
    Scope: private
    </description>
  </bean>

</beans>
