<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# Copyright (C) 2005 Open Microscopy Environment
#       Massachusetts Institue of Technology,
#       National Institutes of Health,
#       University of Dundee
#
#
#
#    This library is free software; you can redistribute it and/or
#    modify it under the terms of the GNU Lesser General Public
#    License as published by the Free Software Foundation; either
#    version 2.1 of the License, or (at your option) any later version.
#
#    This library is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#    Lesser General Public License for more details.
#
#    You should have received a copy of the GNU Lesser General Public
#    License along with this library; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->

<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Written by:  Josh Moore <josh.moore@gmx.de>
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->

<!--

	Configuration for services.
	TODO add log4j configuration (e.g. update intervals)
 
-->


<beans default-lazy-init="true">	

<!--	Aspects/Interceptors which catch ALL calls to our service methods
			=================================================================
			Possibilities are: tracing, logging, security, transactions, etc.
	-->
    
	<bean 
    				id="abstractService" 
    	abstract="true"
				 class="org.springframework.aop.framework.ProxyFactoryBean">
    
		<property name="interceptorNames">
			<list>
      <!-- FIXME <value>serviceSecurity</value> -->
			<value>exceptionHandling</value>
			<value>logging</value>	
      <value>hibernateFilter</value>
      <value>hibernateInterceptor</value>
      <value>eventHandling</value>
<!--			
			<value>serviceTracing</value>
			<value>serviceTransactions</value> 
  		<value>aop.*</value>
-->
    	</list>
    </property>
	</bean>
	
	<!-- 	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
				SERVICE LEVEL ONE
				~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
    -->
  <bean id="level1">
		<property name="hibernateTemplate" ref="hibernateTemplate"/>
  </bean>

  <bean id="internal.query"  class="ome.logic.QueryImpl" parent="level1"/>
  <bean id="queryService"  		parent="abstractService">
    <property name="target" 					ref="internal.query"/>
    <property name="proxyInterfaces" 	value="ome.api.IQuery"/>
	</bean>
  
  <bean id="internal.update" 		class="ome.logic.UpdateImpl" parent="level1">
    <constructor-arg ref="internal.query"/>
  </bean>
  <bean id="updateService" 		parent="abstractService">
  	<property name="target" 					ref="internal.update"/>
    <property name="proxyInterfaces" 	value="ome.api.IUpdate"/>
  </bean>

	<!-- 	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
				SERVICE LEVEL TWO
				~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
    -->
  <bean id="level2">
		<property name="updateService" 	ref="internal.update"/>
    <property name="queryService"		ref="internal.query"/>	
  </bean>

  <bean id="internal.analysis" class="ome.logic.AnalysisImpl" parent="level2"/>
	<bean id="analysisService" parent="abstractService">
    <property name="target" 					ref="internal.analysis"/>
    <property name="proxyInterfaces" 	value="ome.api.IAnalysis"/>
	</bean>		

  <bean id="internal.pixels" class="ome.logic.PixelsImpl" parent="level2"/>
  <bean id="pixelsService" parent="abstractService">
	  <property name="target" ref="internal.pixels"/>
    <property name="proxyInterfaces" 	value="ome.api.IPixels"/>
	</bean>			
    	
  <bean id="internal.pojos" class="ome.logic.PojosImpl" parent="level2"/>
	<bean id="pojosService" parent="abstractService">
		<property name="target" 					ref="internal.pojos"/>
		<property name="proxyInterfaces" 	value="ome.api.IPojos"/>
	</bean>		

</beans>
