#if($pojo.hasMetaAttribute("class-code"))
  // The following is extra code specified in the hbm.xml files
$pojo.getExtraClassCode()
  // end of extra code specified in the hbm.xml files
#end

###########################################################
## <CustomCode>
###########################################################
  public boolean isValid() 
  {
      return ome.util.Validator.validate(this).isValid();
  }
  
  public ome.util.Validation validate()
  {
      return ome.util.Validator.validate(this);
  }
  
  public boolean acceptFilter(ome.util.Filter filter){
#foreach($property in $pojo.allPropertiesIterator)
#set( $fulltype = $c2j.getJavaTypeName($property,false) ) ## , $generics)
#set( $type = $c2j.unqualify($fulltype) )
#set( $get = "$pojo.getGetterSignature($property)()" )
#set( $set = "set$pojo.getPropertyName($property)" )
#set( $field = $property.name )
	  this.$property.name = ($type) filter.filter(${field.toUpperCase()}, $property.name ); 
#end ## foreach
#if($pojo.isSubclass())
  	 return super.acceptFilter(filter);
#else
	 return true;
#end
  }

#if($clazz.identifierProperty)
  public String toString(){
#set($idGetter = "${pojo.getGetterSignature($clazz.identifierProperty)}()")
	return "$pojo.declarationName"+($idGetter==null ? ":Hash_"+this.hashCode() : ":Id_"+$idGetter);
  }
#end
  
  // FIELD-FIELDS
  
  	public Set fields()
    {
	    return new HashSet(${pojo.getDeclarationName()}.FIELDS);
    }
  
#foreach($property in $pojo.allPropertiesIterator)
#set( $field = $property.name )
	public final static String ${field.toUpperCase()} = "${pojo.declarationName}_${field}";
#end ## foreach
	public final static Set FIELDS = new HashSet();
	static {
#foreach($property in $pojo.allPropertiesIterator)
#set( $field = $property.name )
	   FIELDS.add(${field.toUpperCase()});
#if($pojo.isSubclass())
	   FIELDS.addAll(${pojo.extends}.FIELDS);
#end	   
#end ## foreach
	}
	
	
	// Dynamic Getter/Setter
#if(!$pojo.isSubclass())
	protected Map _dynamicFields;
#end
	public Object retrieve(String field)
	{
		if (field == null)
		{
			return null;
#foreach($property in $pojo.allPropertiesIterator)
#set( $field = $property.name )
#set( $get = "$pojo.getGetterSignature($property)()" )
		}
		else if (field.equals(${field.toUpperCase()})) ## use == here first??
		{
			return $get;
#end ## forech
		} else {
#if($pojo.isSubclass())
	        return super.retrieve(field);
#else
			if (_dynamicFields != null)
			{
				return _dynamicFields.get(field);
			}
			return null;
#end			
		}
	}
	
	public void putAt(String field, Object value)
	{
		if (field == null)
		{
			return;
#foreach($property in $pojo.allPropertiesIterator)
#set( $field = $property.name )
#set( $set = "set$pojo.getPropertyName($property)" )
#set( $fulltype = $c2j.getJavaTypeName($property,false) ) ## , $generics)
#set( $type = $c2j.unqualify($fulltype) )
		}
		else if (field.equals(${field.toUpperCase()}))
		{
			${set}(($type)value);
#end ## foreach			
		} else {
#if($pojo.isSubclass())
		    super.putAt(field,value);
#else			
			if (_dynamicFields == null)
				_dynamicFields = new HashMap();
			
			_dynamicFields.put(field,value);
#end			
		}
	}

#if(!$pojo.isSubclass())
	protected boolean _loaded = true;
#end
	public boolean isLoaded()
	{
		return _loaded;
	}
	
	public void unload()
	{
		_loaded = false;
#foreach($property in $pojo.allPropertiesIterator)
#if(!$clazz.identifierProperty.equals($property))	
		this.$property.name = null;
#end ## if ! id
#end ## foreach			
#if($pojo.isSubclass())
		super.unload();
#else			

#end ## if subclass
	}
	
	protected void errorIfUnloaded()
	{
		if ( ! _loaded )
			throw new IllegalStateException("Object unloaded:"+this);
	}

##parse( "$clazz.vm" ) TODO
##parse( "pojo/test.vm" )
##$templates.get("pojo/test.vm")
#set($t = "pojo/${pojo.declarationName}.vm")
##if($th.templateExists($t))$templates.get($t)#end TODO
###########################################################
## </CustomCode>
###########################################################
